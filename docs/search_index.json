[["index.html", "WCS Mechanical Constraints Section 1 Purpose", " WCS Mechanical Constraints George Woolsey 2023-08-25 Section 1 Purpose Data analysis for USFS Wildfire Crisis Strategy (WCS) mechanical constraints project. "],["objective.html", "Section 2 Objective", " Section 2 Objective A complex web of regulations and other constraints limit the extent and intensity of forest treatment application (Van Deusen et al., 2012; North et al., 2015; Lydersen et al., 2019). Physical-environment, socioeconomic, and regulatory factors alone or in combination affect what type of treatment is practical or allowed in different areas. The objective of this study is to spatially identify the treatable area and the constraints on management activities in western USFS managed forests and the 21 priority landscapes outlined in the USFS Wildfire Crisis Strategy (USFS). Specific questions asked in this analysis are: i) What is the spatial extent on which management is constrained? ii) Which constraining factor(s) — physical-environment, socioeconomic, regulatory — is most limiting to forest management? "],["data-sources.html", "Section 3 Data Sources", " Section 3 Data Sources The data utilized for this analysis was generated in Google Earth Engine using this script. This program outputs 1) a data table of features - USDA Forest Service (USFS) managed forests - with user-defined constraints to forest managment and the reduction in treatable forested area based on those constraints, and 2) a shapefile of the spatial arrangement of treatable and constrained forested area within the boundary of each feature. The data products used in this study include: The National Land Cover Database (NLCD) was used to define forested area based on 2019 classification at 30m. The PAD-US product was used to identify protected areas that are dedicated to the preservation of biological diversity and to other natural, recreation and cultural uses, managed for these purposes through legal or other effective means. The USGS 3DEP Seamless National Map (10m) was used to determine slope. The USFWS Threatened &amp; Endangered Species Active Critical Habitat Report was used to determin the proposed and final critical habitat for species listed as Threatened and Endangered by the FWS, or that are jointly managed by FWS/NMFS. The National Hydrography Dataset (NHD) was used to define the United States water drainage network made up of stream features and waterbody polygons. Road and Trail networks were determined utilizing: The United States Census Bureau TIGER dataset (2016 release) The USFS FACTS database products: Motor Vehicle Use Map: Roads; Motor Vehicle Use Map: Trails; National Forest System Roads; National Forest System Trails "],["scenario-analysis-wcs-priority-landscapes.html", "Section 4 Scenario Analysis: WCS Priority Landscapes 4.1 Scenarios Considered 4.2 Data Preparation 4.3 Geographic Delineation Description 4.4 Landscape-level analysis 4.5 Fireshed-level analysis 4.6 High-risk fireshed project areas 4.7 Objective vs. Treatable 4.8 Totals 4.9 Landcover Class Area", " Section 4 Scenario Analysis: WCS Priority Landscapes # turn off the s2 processing ## https://stackoverflow.com/questions/68478179/how-to-resolve-spherical-geometry-failures-when-joining-spatial-data sf::sf_use_s2(FALSE) See the USFS Wildfire Crisis Strategy (WCS) document for background information. 4.1 Scenarios Considered There are three scenarios considered in this analysis of the constraints to mechanical forest health and fuel reduction treatments: # mechanical mgmt allowed if: n_sc_temp &lt;- 3 data.frame( scenario = 1:3 , cover = rep(&quot;Forest or Shrubland&quot;,n_sc_temp) , protected = rep(&quot;Not Protected&quot;,n_sc_temp) , slope = c(&quot;&lt;40%&quot;,&quot;&lt;60%&quot;,&quot;&lt;60%&quot;) , road = c(&quot;&lt;1,000ft&quot;,&quot;&lt;2,000ft&quot;,&quot;&lt;2,000ft&quot;) , riparian = c(&quot;&gt;100ft&quot;,&quot;&gt;100ft&quot;,&quot;&gt;50ft&quot;) , admin = c(&quot;No Designation&quot;,&quot;No Designation&quot;,&quot;Any Designation&quot;) ) %&gt;% tidyr::pivot_longer( cols = -c(scenario) ) %&gt;% tidyr::pivot_wider( names_from = scenario , values_from = value , names_prefix = &quot;scenario_&quot; ) %&gt;% dplyr::mutate( name = factor( name , levels = c( &quot;cover&quot; , &quot;protected&quot; , &quot;slope&quot; , &quot;road&quot; , &quot;riparian&quot; , &quot;admin&quot; ) , labels = c( &quot;NLCD Cover Type&quot; , &quot;Protected or&lt;br&gt;IRA Status&quot; , &quot;Slope&quot; , &quot;Distance to&lt;br&gt;Nearest Road&quot; , &quot;Riparian&lt;br&gt;Buffer&quot; , &quot;Administrative&lt;br&gt;Designation&quot; ) , ordered = T ) ) %&gt;% dplyr::arrange(name) %&gt;% dplyr::mutate( lvl = paste0(&quot;L&quot;,dplyr::row_number()-1,&quot;:&quot;) ) %&gt;% dplyr::relocate(lvl) %&gt;% # make table kableExtra::kable( caption = &quot;Scenarios Considered for Determining Mechanical Treatment Operability&lt;br&gt;Mechanical treatment allowed if:&quot; , col.names = c( &quot;&quot; , &quot;&quot; , &quot;Scenario 1&lt;br&gt;Most Constrained&quot; , &quot;Scenario 2&lt;br&gt;Moderate&quot; , &quot;Scenario 3&lt;br&gt;Least Constrained&quot; ) , escape = F ) %&gt;% kable_classic(full_width=T) %&gt;% kableExtra::kable_styling(font_size = 11,fixed_thead = TRUE) Table 4.1: Scenarios Considered for Determining Mechanical Treatment OperabilityMechanical treatment allowed if: Scenario 1Most Constrained Scenario 2Moderate Scenario 3Least Constrained L0: NLCD Cover Type Forest or Shrubland Forest or Shrubland Forest or Shrubland L1: Protected orIRA Status Not Protected Not Protected Not Protected L2: Slope &lt;40% &lt;60% &lt;60% L3: Distance toNearest Road &lt;1,000ft &lt;2,000ft &lt;2,000ft L4: RiparianBuffer &gt;100ft &gt;100ft &gt;50ft L5: AdministrativeDesignation No Designation No Designation Any Designation The figure below illustrates the workflow used to quantify the amount of land available for mechanical forest health and risk reduction fuel treatments by considering layered operational constraints. This example illustrates scenario 2 for a 10,252 hectare (25,000 acre) fireshed project area near Rustic, Colorado in the Colorado Front Range priority landscape. 4.2 Data Preparation 4.2.1 Load WCS landscapes WCS priority landscape spatial data from the USFS Geospatial Data Discovery site (accessed 2023-04-04). # load data wf_landscapes &lt;- sf::read_sf(&quot;../data/Wildfire_Crisis_Strategy_Landscapes/Wildfire_Crisis_Strategy_Landscapes_(Feature_Layer).shp&quot;) %&gt;% dplyr::rename_with(tolower) %&gt;% sf::st_make_valid() %&gt;% dplyr::mutate( hectares = (as.numeric(sf::st_area(geometry))/10000) , Mil.Hectares = hectares %&gt;% scales::comma(suffix = &quot; M&quot;, scale = 1e-6, accuracy = .01) , acres = (as.numeric(sf::st_area(geometry))/4046.85642) , Mil.Acres = acres %&gt;% scales::comma(suffix = &quot; M&quot;, scale = 1e-6, accuracy = .01) ) %&gt;% dplyr::left_join( data.frame(state = datasets::state.name, state_abb = datasets::state.abb) , by = join_by(&quot;state&quot;) ) %&gt;% dplyr::mutate( area_name = paste0( ifelse(is.na(state_abb) | state_abb == &quot;&quot;, &quot;UNK&quot;, state_abb) , &quot;: &quot; , name ) ) %&gt;% # manual label placement dplyr::left_join( readr::read_csv(&quot;../data/wildfirepriority/area_label_placement.csv&quot;) , by = dplyr::join_by(&quot;area_name&quot;) ) #rename sf geom column names(wf_landscapes)[names(wf_landscapes)==tolower(attr(wf_landscapes, &quot;sf_column&quot;))] = &quot;geometry&quot; sf::st_geometry(wf_landscapes) = &quot;geometry&quot; # set crs transform_crs &lt;- sf::st_crs(wf_landscapes) # view wf_landscapes %&gt;% dplyr::glimpse() 4.2.2 Load landscape-level constraint data Landscape-level constraint analysis data (i.e., row unique by WCS landscape) was created via this Google Earth Engine script. # load landscape constraint scenario data constrained_by_scnro_ls &lt;- list.files(&quot;../data/wildfirepriority/all_slp/&quot;,pattern = &quot;\\\\.csv$&quot;) %&gt;% purrr::keep(stringr::str_starts(.,&quot;wfpriority_all_slp_sc&quot;)) %&gt;% purrr::map(function(x){ readr::read_csv( paste0(&quot;../data/wildfirepriority/all_slp/&quot;,x) , name_repair = &quot;universal&quot; , col_types = cols(.default = &quot;c&quot;) ) %&gt;% dplyr::rename_with(tolower) %&gt;% dplyr::rename_with(make.names) %&gt;% dplyr::select(state,name,tidyselect::ends_with(&quot;_m2&quot;),tidyselect::starts_with(&quot;pct_&quot;)) %&gt;% dplyr::mutate(scenario_id = stringr::word(x,4,sep=&quot;_&quot;) %&gt;% readr::parse_number()) %&gt;% dplyr::relocate(scenario_id) }) %&gt;% dplyr::bind_rows() %&gt;% dplyr::inner_join( wf_landscapes %&gt;% sf::st_drop_geometry() %&gt;% dplyr::select(state,name,area_name) , by = dplyr::join_by(state,name) ) %&gt;% dplyr::relocate(area_name,.after = &quot;scenario_id&quot;) %&gt;% dplyr::group_by(area_name,scenario_id) %&gt;% dplyr::filter(dplyr::row_number()==1) %&gt;% dplyr::ungroup() %&gt;% dplyr::mutate( dplyr::across( tidyselect::ends_with(&quot;_m2&quot;) , ~ as.numeric(.x) / 10000 ) , dplyr::across( tidyselect::starts_with(&quot;pct_&quot;) , ~ as.numeric(.x) ) ) %&gt;% dplyr::rename_with( ~ gsub(&quot;_m2&quot;, &quot;_ha&quot;, .x) , tidyselect::ends_with(&quot;_m2&quot;) ) %&gt;% # calculate pct reduction dplyr::mutate( pct_rdctn1_protected = -1*(1 - pct_rmn1_protected) , pct_rdctn2_slope = -1*(pct_rmn1_protected - pct_rmn2_slope) , pct_rdctn3_roads = -1*(pct_rmn2_slope - pct_rmn3_roads) , pct_rdctn4_riparian = -1*(pct_rmn3_roads - pct_rmn4_riparian) , pct_rdctn5_administrative = -1*(pct_rmn4_riparian - pct_rmn5_administrative) , pct_rdctn_total = -1*(1 - pct_rmn5_administrative) , pct_covertype_area = covertype_area_ha/feature_area_ha # scenario description , scenario_lab = factor( scenario_id , levels = 1:3 , labels = paste0(&quot;Scenario &quot;, 1:3) , ordered = T ) %&gt;% forcats::fct_rev() , scenario_desc = factor( scenario_id , levels = 1:3 , labels = c(&quot;Scenario 1\\n(status quo)&quot;, &quot;Scenario 2\\n(slopes+roads)&quot;, &quot;Scenario 3\\n(slopes+roads+admin)&quot;) , ordered = T ) ) 4.2.3 Load fireshed project area data The fireshed registry spatial data was obtained from the USFS Geospatial Data Discovery tool for firesheds and project areas (accessed 2023-05-03). See this section for exploration of fireshed and project area spatial data ### fireshed spatial data fireshed &lt;- sf::st_read(&quot;../data/firesheds/Fireshed_Registry3A_Fireshed/Fireshed_Registry%3A_Fireshed_(Feature_Layer).shp&quot;) %&gt;% sf::st_transform(transform_crs) %&gt;% setNames(c( &quot;shape_id&quot; , &quot;area_ha&quot; , &quot;fireshed_id&quot; , &quot;fireshed_name&quot; , &quot;fireshed_code&quot; , &quot;fireshed_state&quot; , &quot;nopas&quot; , &quot;objectid&quot; , &quot;fshed_id&quot; , &quot;exp_total&quot; , &quot;exp_usfs&quot; , &quot;exp_nonfs&quot; , &quot;exp_usfs_protected&quot; , &quot;exp_nonfs_protected&quot; , &quot;exp_usfs_managed&quot; , &quot;exp_nonfs_managed&quot; , &quot;exp_usfs_forest&quot; , &quot;exp_nonfs_forest&quot; , &quot;exp_usfs_nonforest&quot; , &quot;exp_nonfs_nonforest&quot; , &quot;exp_usfs_conifer&quot; , &quot;exp_nonfs_conifer&quot; , &quot;exp_usfs_managedforest&quot; , &quot;exp_nonfs_managedforest&quot; , &quot;exp_usfs_managedconifer&quot; , &quot;exp_nonfs_managedconifer&quot; , &quot;exp_nonfs_nonconifer_hihaz&quot; , &quot;dist_vs&quot; , &quot;crisis_strategy&quot; , &quot;key_preformance_indicator&quot; , &quot;national_usfs_rank&quot; , &quot;national_all_land_rank&quot; , &quot;regional_usfs_rank&quot; , &quot;regional_all_land_rank&quot; , &quot;start_date&quot; , &quot;end_date&quot; , &quot;geometry&quot; )) %&gt;% dplyr::mutate( exposure_pct_rank = dplyr::percent_rank(exp_total) , exposure_pct_rank_grp = dplyr::case_when( exposure_pct_rank &gt;= 1-0.01 ~ &quot;Top 1%&quot; , exposure_pct_rank &gt;= 1-0.05 ~ &quot;Top 5%&quot; , exposure_pct_rank &gt;= 1-0.10 ~ &quot;Top 10%&quot; , exposure_pct_rank &gt;= 1-0.25 ~ &quot;Top 25%&quot; , TRUE ~ &quot;Bottom 75%&quot; ) %&gt;% factor( levels = c(&quot;Top 1%&quot;,&quot;Top 5%&quot;,&quot;Top 10%&quot;,&quot;Top 25%&quot;,&quot;Bottom 75%&quot;) , ordered = T ) # there is also a national_all_land_rank column , ntllandrank_pct_rank = dplyr::percent_rank(-national_all_land_rank) , ntllandrank_pct_rank_grp = dplyr::case_when( ntllandrank_pct_rank &gt;= 1-0.01 ~ &quot;Top 1%&quot; , ntllandrank_pct_rank &gt;= 1-0.05 ~ &quot;Top 5%&quot; , ntllandrank_pct_rank &gt;= 1-0.10 ~ &quot;Top 10%&quot; , ntllandrank_pct_rank &gt;= 1-0.25 ~ &quot;Top 25%&quot; , TRUE ~ &quot;Bottom 75%&quot; ) %&gt;% factor( levels = c(&quot;Top 1%&quot;,&quot;Top 5%&quot;,&quot;Top 10%&quot;,&quot;Top 25%&quot;,&quot;Bottom 75%&quot;) , ordered = T ) , crisis_strategy = ifelse(is.na(crisis_strategy),&quot;Not High Risk&quot;,crisis_strategy) %&gt;% as.factor() %&gt;% forcats::fct_shift() ) #rename sf geom column names(fireshed)[names(fireshed)==tolower(attr(fireshed, &quot;sf_column&quot;))] = &quot;geometry&quot; sf::st_geometry(fireshed) = &quot;geometry&quot; # calculate area fireshed &lt;- fireshed %&gt;% dplyr::mutate( fireshed_area_ha = as.numeric(sf::st_area(geometry))/10000 , fireshed_area_acres = (fireshed_area_ha*10000)/4046.85642 ) ## fireshed_proj_area spatial data fireshed_proj_area &lt;- sf::st_read(&quot;../data/firesheds/Fireshed_Registry3A_Project_Area/Fireshed_Registry%3A_Project_Area_(Feature_Layer).shp&quot;) %&gt;% sf::st_transform(transform_crs) %&gt;% setNames(c( &quot;shape_id&quot; , &quot;fireshed_id&quot; , &quot;pa_id&quot; , &quot;pa_area_ha&quot; , &quot;objectid&quot; , &quot;pa_id2&quot; , &quot;fshed_id&quot; , &quot;exp_total&quot; , &quot;exp_usfs&quot; , &quot;exp_nonfs&quot; , &quot;exp_usfs_protected&quot; , &quot;exp_nonfs_protected&quot; , &quot;exp_usfs_managed&quot; , &quot;exp_nonfs_managed&quot; , &quot;exp_usfs_forest&quot; , &quot;exp_nonfs_forest&quot; , &quot;exp_usfs_nonforest&quot; , &quot;exp_nonfs_nonforest&quot; , &quot;exp_usfs_conifer&quot; , &quot;exp_nonfs_conifer&quot; , &quot;exp_usfs_managedforest&quot; , &quot;exp_nonfs_managedforest&quot; , &quot;exp_usfs_managedconifer&quot; , &quot;exp_nonfs_managedconifer&quot; , &quot;exp_nonfs_nonconifer_hihaz&quot; , &quot;dist_vs&quot; , &quot;pctrecentlydisturbed&quot; , &quot;start_date&quot; , &quot;end_date&quot; , &quot;geometry&quot; )) %&gt;% dplyr::mutate( exposure_pct_rank = dplyr::percent_rank(exp_total) , exposure_pct_rank_grp = dplyr::case_when( exposure_pct_rank &gt;= 1-0.01 ~ &quot;Top 1%&quot; , exposure_pct_rank &gt;= 1-0.05 ~ &quot;Top 5%&quot; , exposure_pct_rank &gt;= 1-0.10 ~ &quot;Top 10%&quot; , exposure_pct_rank &gt;= 1-0.25 ~ &quot;Top 25%&quot; , TRUE ~ &quot;Bottom 75%&quot; ) %&gt;% factor( levels = c(&quot;Top 1%&quot;,&quot;Top 5%&quot;,&quot;Top 10%&quot;,&quot;Top 25%&quot;,&quot;Bottom 75%&quot;) , ordered = T ) ) #rename sf geom column names(fireshed_proj_area)[names(fireshed_proj_area)==tolower(attr(fireshed_proj_area, &quot;sf_column&quot;))] = &quot;geometry&quot; sf::st_geometry(fireshed_proj_area) = &quot;geometry&quot; # calculate area fireshed_proj_area &lt;- fireshed_proj_area %&gt;% dplyr::mutate( pa_area_ha = as.numeric(sf::st_area(geometry))/10000 , pa_area_acres = (pa_area_ha*10000)/4046.85642 ) %&gt;% # JOIN WITH FIRESHED DATA dplyr::inner_join( fireshed %&gt;% sf::st_drop_geometry() %&gt;% dplyr::select(fireshed_id, crisis_strategy, exp_total , exposure_pct_rank, exposure_pct_rank_grp ) %&gt;% dplyr::rename(exposure_total=exp_total) %&gt;% dplyr::rename_with( ~ paste0(&quot;fireshed_&quot;,.x) , -c(fireshed_id) ) , by = dplyr::join_by(fireshed_id) ) %&gt;% dplyr::select(pa_id,pa_area_ha ,exp_total,exposure_pct_rank,exposure_pct_rank_grp , tidyselect::starts_with(&quot;fireshed_&quot;) ) %&gt;% dplyr::rename(exposure_total=exp_total) %&gt;% dplyr::rename_with( ~ paste0(&quot;pa_&quot;, .x, recycle0 = TRUE) , tidyselect::starts_with(&quot;exp&quot;) ) Fireshed project area constraint analysis data (i.e., row unique by WCS landscape + f.p.a.) was created via this Google Earth Engine script # load fireshed constraint scenario data constrained_by_scnro_ls_pa &lt;- list.files(&quot;../data/wildfirepriority/fireshed_slp/&quot;,pattern = &quot;\\\\.csv$&quot;) %&gt;% purrr::keep(stringr::str_starts(.,&quot;wfpriority_fireshed_slp_sc&quot;)) %&gt;% purrr::map(function(x){ readr::read_csv( paste0(&quot;../data/wildfirepriority/fireshed_slp/&quot;,x) , name_repair = &quot;universal&quot; , col_types = cols(.default = &quot;c&quot;) ) %&gt;% dplyr::rename_with(tolower) %&gt;% dplyr::rename_with(make.names) %&gt;% dplyr::select(state,name,pa_id,tidyselect::ends_with(&quot;_m2&quot;),tidyselect::starts_with(&quot;pct_&quot;)) %&gt;% dplyr::mutate(scenario_id = stringr::word(x,4,sep=&quot;_&quot;) %&gt;% readr::parse_number()) %&gt;% dplyr::relocate(scenario_id) }) %&gt;% dplyr::bind_rows() %&gt;% dplyr::inner_join( wf_landscapes %&gt;% sf::st_drop_geometry() %&gt;% dplyr::select(state,name,area_name) , by = dplyr::join_by(state,name) ) %&gt;% dplyr::relocate(area_name,.after = &quot;scenario_id&quot;) %&gt;% dplyr::mutate( dplyr::across( tidyselect::ends_with(&quot;_m2&quot;) , ~ as.numeric(.x) / 10000 ) , dplyr::across( tidyselect::starts_with(&quot;pct_&quot;) , ~ as.numeric(.x) ) ) %&gt;% dplyr::rename_with( ~ gsub(&quot;_m2&quot;, &quot;_ha&quot;, .x) , tidyselect::ends_with(&quot;_m2&quot;) ) %&gt;% dplyr::group_by(area_name,pa_id,scenario_id) %&gt;% dplyr::arrange(desc(pct_pa_intrsct)) %&gt;% dplyr::filter(dplyr::row_number()==1) %&gt;% dplyr::ungroup() %&gt;% dplyr::filter(pct_pa_intrsct&gt;=0.00001) %&gt;% # calculate pct reduction dplyr::mutate( pct_rdctn1_protected = -1*(1 - pct_rmn1_protected) , pct_rdctn2_slope = -1*(pct_rmn1_protected - pct_rmn2_slope) , pct_rdctn3_roads = -1*(pct_rmn2_slope - pct_rmn3_roads) , pct_rdctn4_riparian = -1*(pct_rmn3_roads - pct_rmn4_riparian) , pct_rdctn5_administrative = -1*(pct_rmn4_riparian - pct_rmn5_administrative) , pct_rdctn_total = -1*(1 - pct_rmn5_administrative) , pct_covertype_area = covertype_area_ha/feature_area_ha # calculate level of constraint , cnstrnt_lvl = dplyr::case_when( -pct_rdctn_total &gt; 0.8 ~ 1 , -pct_rdctn_total &gt;= 0.6 ~ 2 , -pct_rdctn_total &gt;= 0.0 ~ 3 ) , cnstrnt_class = factor( cnstrnt_lvl , levels = 1:3 , labels = c(&quot;high constraint&quot;, &quot;med. constraint&quot;, &quot;low constraint&quot;) , ordered = T ) %&gt;% forcats::fct_rev() , rmn_cnstrnt_class = factor( cnstrnt_lvl , levels = 1:3 , labels = c(&quot;0–19% treatable&quot;, &quot;20–40% treatable&quot;, &quot;&gt;40% treatable&quot;) , ordered = T ) %&gt;% forcats::fct_rev() # scenario description , scenario_lab = factor( scenario_id , levels = 1:3 , labels = paste0(&quot;Scenario &quot;, 1:3) , ordered = T ) %&gt;% forcats::fct_rev() , scenario_desc = factor( scenario_id , levels = 1:3 , labels = c(&quot;Scenario 1\\n(status quo)&quot;, &quot;Scenario 2\\n(slopes+roads)&quot;, &quot;Scenario 3\\n(slopes+roads+admin)&quot;) , ordered = T ) ) %&gt;% # join with fireshed data dplyr::inner_join( fireshed_proj_area %&gt;% sf::st_drop_geometry() %&gt;% dplyr::select(pa_id, tidyselect::starts_with(&quot;pa_exposure&quot;), tidyselect::starts_with(&quot;fireshed_&quot;)) %&gt;% dplyr::mutate(pa_id=as.character(pa_id)) , by = dplyr::join_by(pa_id) ) 4.3 Geographic Delineation Description Timeline of the research utilized to motivate and support the creation of the WCS: 2018 August - Toward share stewardship across the landscapes: an outcome-based investment strategy created a hotspot map of the source of wildfire risk to communities showing that 80% of community exposure from NFS lands originates on 20% of the NFS area. 2019 February - Evers et al. analyzed community wildfire exposure from national forests by associating conditions that affect exposure in the areas where wildfires ignite to conditions where exposure likely occurs 2019 May - Ager et al. mapped community firesheds by creating a continuous smoothed surface of predicted structure exposure from all FSim ignitions (see also Palaiologou et al. 2019 and Ager et al. 2019) 2020 - Evers et al. release Fireshed Registry as a geospatial dashboard and decision tool 2021 May - Ager et al. 2021 official release of the Fireshed Registry as a geospatial information system that organizes landscape risk to developed areas into a planning framework (see figure below) 2022 January - US Department of Agriculture, Forest Service launches a 10-year Wildfire Crisis Strategy 2022 April - 10 initial landscapes selected for WCS prioritization 2023 January - additional 11 landscapes selected for WCS prioritization Nested spatial framework for firesheds. Each scale has specific functionality in terms of the planning processes. Firesheds are the broad scale unit of prioritization, but project areas within them are also prioritized as part of implementation of treatments. Project areas are roughly the size that national forests use for conducting vegetation and fuel management projects. The relative variation among firesheds compared to variation within them controls the relative emphasis on selecting firesheds versus individual planning areas. Ager et al. 2021 #define basemap states_temp &lt;- USAboundaries::us_states( states = c( # usfs region 1-6 states &quot;MT&quot;,&quot;WY&quot;,&quot;CO&quot;,&quot;NM&quot;,&quot;AZ&quot;,&quot;UT&quot;,&quot;ID&quot;,&quot;WA&quot;,&quot;OR&quot;,&quot;CA&quot;,&quot;NV&quot; # , &quot;KS&quot;,&quot;NE&quot;,&quot;SD&quot;,&quot;ND&quot; ) ) %&gt;% sf::st_transform(transform_crs) cities_temp &lt;- USAboundaries::us_cities( states = c( # usfs region 1-6 states &quot;MT&quot;,&quot;WY&quot;,&quot;CO&quot;,&quot;NM&quot;,&quot;AZ&quot;,&quot;UT&quot;,&quot;ID&quot;,&quot;WA&quot;,&quot;OR&quot;,&quot;CA&quot;,&quot;NV&quot; # , &quot;KS&quot;,&quot;NE&quot;,&quot;SD&quot;,&quot;ND&quot; ) ) %&gt;% sf::st_transform(transform_crs) %&gt;% dplyr::filter( toupper(city) %in% c( &quot;DENVER&quot; , &quot;TUSCON&quot; , &quot;SALT LAKE CITY&quot; , &quot;LAS VEGAS&quot; , &quot;SAN DIEGO&quot; , &quot;LOS ANGELES&quot; , &quot;FRESNO&quot; , &quot;SAN FRANCISCO&quot; , &quot;SACRAMENTO&quot; , &quot;PORTLAND&quot; , &quot;SEATTLE&quot; , &quot;ALBUQUERQUE&quot; , &quot;RENO&quot; , &quot;BOISE&quot; , &quot;HELENA&quot; , &quot;BILLINGS&quot; ) | (toupper(city) == &quot;PHOENIX&quot; &amp; state_abbr == &quot;AZ&quot;) ) # plot basemap plt_basemap &lt;- ggplot() + geom_sf( data = states_temp , fill = NA , color = &quot;gray66&quot; ) + geom_sf_text( data = states_temp , mapping = aes(label = stusps) , color = &quot;gray66&quot; , size = 3 ) + geom_sf( data = cities_temp , shape = 1 , size = 1 , color = &quot;gray44&quot; ) + geom_sf_text( data = cities_temp , mapping = aes(label = city) , color = &quot;gray44&quot; , size = 2 # , hjust = -0.15 , hjust = 0.5 , vjust = -0.25 ) + coord_sf(expand = F) + theme_void() # plot basemap simple plt_basemap_simple &lt;- ggplot() + geom_sf( data = states_temp , fill = NA , color = &quot;gray66&quot; ) + coord_sf(expand = F) + theme_void() 4.3.1 Fireshed risk to communities (2021) ggplot() + geom_sf( data = fireshed , mapping = aes(fill=ntllandrank_pct_rank_grp) ) + geom_sf( data = USAboundaries::us_states() %&gt;% dplyr::filter(!stusps %in% c(&quot;AK&quot;,&quot;HI&quot;,&quot;PR&quot;)) %&gt;% sf::st_transform(transform_crs) , fill = NA , color = &quot;gray88&quot; ) + scale_fill_manual(values=c(&quot;firebrick&quot;,&quot;orange3&quot;,&quot;khaki&quot;,&quot;seagreen3&quot;,&quot;royalblue&quot;)) + coord_sf(expand = F) + labs( fill = &quot;Fireshed exposure ranks&quot; ) + theme_void() + theme( legend.position = &quot;top&quot; , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size = 8) , legend.text = element_text(size = 7) ) National map of the 7,688 firesheds created from community wildfire transmission data (Evers et al. 2020). The fireshed boundaries were created with a process that delineates hotspots of fire transmission to buildings in adjacent or nearby communities. See the Methods section for details on delineating firesheds. Figure 2 from Ager et al. 2021 (p. 7) 4.3.2 Wilfire Crisis Strategy 21 Priority Landscapes (2022-2023) plt_fshed &lt;- plt_basemap + geom_sf( data = fireshed %&gt;% sf::st_filter( wf_landscapes %&gt;% dplyr::select(area_name) , .predicate=st_intersects ) , aes(fill=crisis_strategy) , alpha = 0.8 ) + geom_sf( data = wf_landscapes , mapping = aes(color = paste0(investment, &quot; investment&quot;)) , fill=NA # , color=&quot;black&quot; , lwd=0.6 )+ geom_text( data = wf_landscapes %&gt;% sf::st_drop_geometry() %&gt;% sf::st_as_sf(coords = c(&quot;lon&quot;,&quot;lat&quot;)) %&gt;% sf::st_set_crs(4326) %&gt;% sf::st_transform(transform_crs) , aes( label = stringr::str_wrap( dplyr::case_when( stringr::str_count(name, &quot;\\\\w+&quot;)&lt;2 ~ stringr::word(name,1,stringr::str_count(name, &quot;\\\\w+&quot;)) , stringr::str_starts(name,&quot;Sierra and Elko&quot;) ~ stringr::word(name,1,3) , TRUE ~ stringr::word(name,1,2) ) , 7) , color = paste0(investment, &quot; investment&quot;) , geometry = geometry , fontface = &quot;bold.italic&quot; ) , stat = &quot;sf_coordinates&quot; , size = 2.5 # , seed = 11 # , min.segment.length = 0 , show.legend = F ) + scale_fill_manual(values = c(&quot;All-Lands&quot;=&quot;firebrick&quot;,&quot;USFS-Only&quot;=&quot;orange3&quot;,&quot;Not High Risk&quot;=&quot;gray88&quot;)) + scale_color_manual(values = c(&quot;black&quot;, &quot;gray33&quot;)) + labs( fill = &quot;Fireshed\\nHigh-Risk Status&quot; , color = &quot;Landscapes&quot; ) + theme( legend.position = c(0.87,0.87) # &quot;top&quot; # , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size = 8, face = &quot;bold&quot;) , legend.text = element_text(size = 8) ) + guides( color = guide_legend(order = 1, override.aes = list(lwd = 3, fill = NA)) #, linetype = c(5,1,1) , fill = guide_legend(order = 2, override.aes = list(lwd = 0)) ) # plot plt_fshed ggplot2::ggsave( filename = paste0(&quot;../data/plt_map_ls_fshed.png&quot;) , plot = ggplot2::last_plot() , width = 8.5 , height = 11 , units = &quot;in&quot; , dpi = &quot;print&quot; , bg = &quot;white&quot; ) The boundaries of the 21 priority landscapes roughly follow the boundaries of “firesheds” prioritized to reduce wildfire transmission to developed areas (Figure 1). Firesheds are geographic delineations with an average area of approximately 250,000 acres (~100,000 hectares) that were created to organize the landscape into units for managing wildfire risk to communities. 4.3.3 Wilfire Crisis Strategy Treatment Objective plt_basemap + geom_sf( data = fireshed %&gt;% dplyr::filter(crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;)) %&gt;% sf::st_filter( wf_landscapes %&gt;% dplyr::select(area_name) , .predicate=st_intersects ) , aes(fill=crisis_strategy) , alpha = 0.8 ) + geom_sf( data = wf_landscapes , mapping = aes(color = paste0(investment, &quot; investment&quot;)) , fill=NA # , color=&quot;black&quot; , lwd=0.6 )+ geom_text( data = wf_landscapes %&gt;% sf::st_drop_geometry() %&gt;% sf::st_as_sf(coords = c(&quot;lon&quot;,&quot;lat&quot;)) %&gt;% sf::st_set_crs(4326) %&gt;% sf::st_transform(transform_crs) , aes( label = stringr::str_wrap( dplyr::case_when( stringr::str_count(name, &quot;\\\\w+&quot;)&lt;2 ~ stringr::word(name,1,stringr::str_count(name, &quot;\\\\w+&quot;)) , stringr::str_starts(name,&quot;Sierra and Elko&quot;) ~ stringr::word(name,1,3) , TRUE ~ stringr::word(name,1,2) ) , 7) , color = paste0(investment, &quot; investment&quot;) , geometry = geometry , fontface = &quot;bold.italic&quot; ) , stat = &quot;sf_coordinates&quot; , size = 2.5 # , seed = 11 # , min.segment.length = 0 , show.legend = F ) + scale_fill_manual(values = c(&quot;All-Lands&quot;=&quot;firebrick&quot;,&quot;USFS-Only&quot;=&quot;orange3&quot;,&quot;Not High Risk&quot;=&quot;gray88&quot;)) + scale_color_manual(values = c(&quot;black&quot;, &quot;gray33&quot;)) + labs( fill = &quot;Fireshed\\nHigh-Risk Status&quot; , color = &quot;Landscapes&quot; ) + theme( legend.position = c(0.87,0.87) # &quot;top&quot; # , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size = 8, face = &quot;bold&quot;) , legend.text = element_text(size = 8) ) + guides( color = guide_legend(order = 1, override.aes = list(lwd = 3, fill = NA)) #, linetype = c(5,1,1) , fill = guide_legend(order = 2, override.aes = list(lwd = 0)) ) Models suggest that fuels reduction treatments can effectively reduce fire size and severity when 20-40% of the landscape has been treated (e.g., Finney, 2007) and the Strategy (USFS, 2022a) aims to treat this amount of high-risk fireshed area within the 21 priority landscapes. The total area of the 21 priority landscapes is approximately 47 million acres (19 million ha), of which 23.7 million acres (9.6 million ha) are in high-risk firesheds; an objective of treating 20-40% would indicate the need to treat between 4.7 to 9.5 million acres (1.9 to 3.8 million ha). 4.3.4 Fireshed Project Areas name_temp &lt;- &quot;Enchanted Circle&quot; # pa map plt_fshed_pa &lt;- ggplot() + geom_sf(data = fireshed_proj_area %&gt;% dplyr::mutate(pa_id=as.character(pa_id)) %&gt;% dplyr::inner_join( constrained_by_scnro_ls_pa %&gt;% dplyr::filter( # fireshed_crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;) name == name_temp ) %&gt;% dplyr::select(pa_id) , by = dplyr::join_by(pa_id) , multiple = &quot;all&quot; ) , aes(fill = fireshed_crisis_strategy, color = &quot;Project Area\\nboundary&quot;) , alpha = 0.8 , lwd = 1.2 ) + geom_sf( data = fireshed %&gt;% # dplyr::filter(crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;)) %&gt;% sf::st_filter( wf_landscapes %&gt;% dplyr::filter(name == name_temp) %&gt;% dplyr::select(area_name) , .predicate=st_intersects ) , aes(color = &quot;Fireshed\\nboundary&quot;) , fill = NA , lwd = 1.2 , linetype = &quot;dashed&quot; ) + geom_sf( data = wf_landscapes %&gt;% dplyr::filter(name == name_temp) , mapping = aes(color = &quot;WCS Landscape\\nboundary&quot;) , fill=NA , lwd = 0.9 )+ scale_fill_manual(values = c(&quot;All-Lands&quot;=&quot;firebrick&quot;,&quot;USFS-Only&quot;=&quot;orange3&quot;,&quot;Not High Risk&quot;=&quot;gray88&quot;)) + scale_color_manual(values = c(&quot;gray44&quot;,&quot;skyblue2&quot;, &quot;black&quot;)) + labs( fill = &quot;Fireshed\\nHigh-Risk Status&quot; , color = &quot;Spatial\\nFramework&quot; , subtitle = name_temp ) + coord_sf(expand = F) + theme_void() + theme( legend.position = c(1.08,0.79) # &quot;top&quot; # , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size = 8, face = &quot;bold&quot;) , legend.text = element_text(size = 10) , plot.subtitle = element_text(face = &quot;bold.italic&quot;, size = 10, hjust = 0.5) ) + guides( color = guide_legend(order = 1, override.aes = list(size = 8, linewidth = 5, fill = NA)) #, linetype = c(5,1,1))) , fill = guide_legend(order = 2, override.aes = list(size = 8,linewidth = 0, alpha = 1)) # , color = NA ) # pa map w/in plt_fshed_pa_incl &lt;- ggplot() + geom_sf(data = fireshed_proj_area %&gt;% dplyr::mutate(pa_id=as.character(pa_id)) %&gt;% dplyr::inner_join( constrained_by_scnro_ls_pa %&gt;% dplyr::filter( # fireshed_crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;) name == name_temp ) %&gt;% dplyr::mutate( # is_25in = ifelse(pct_pa_intrsct&gt;=0.25,&quot;≥25%&quot;,&quot;&lt;25%&quot;) is_25in = ifelse(pct_pa_intrsct&gt;=0.25,&quot;included&quot;,&quot;excluded&quot;) ) %&gt;% dplyr::select( pa_id , is_25in ) , by = dplyr::join_by(pa_id) , multiple = &quot;all&quot; ) , aes(fill = is_25in, color = &quot;Project Area\\nboundary&quot;) , alpha = 0.9 , lwd = 1.2 ) + geom_sf( data = fireshed %&gt;% # dplyr::filter(crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;)) %&gt;% sf::st_filter( wf_landscapes %&gt;% dplyr::filter(name == name_temp) %&gt;% dplyr::select(area_name) , .predicate=st_intersects ) , aes(color = &quot;Fireshed\\nboundary&quot;) , fill = NA , lwd = 1.2 , linetype = &quot;dashed&quot; ) + geom_sf( data = wf_landscapes %&gt;% dplyr::filter(name == name_temp) , mapping = aes(color = &quot;WCS Landscape\\nboundary&quot;) , fill=NA , lwd = 0.9 )+ scale_fill_manual(values = viridis::viridis(n=4, direction = -1, alpha = 0.9)[c(1,3)]) + scale_color_manual(values = c(&quot;gray44&quot;,&quot;skyblue2&quot;, &quot;black&quot;)) + labs( fill = &quot;Project Area\\nInclusions&quot; # fill = &quot;Included in this analysis\\nif ≥25% area w/in landscape&quot; , color = &quot;Spatial\\nFramework&quot; , subtitle = name_temp ) + coord_sf(expand = F) + theme_void() + theme( legend.position = c(1.08,0.83) # &quot;top&quot; # , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size = 8, face = &quot;bold&quot;) , legend.text = element_text(size = 10) , plot.subtitle = element_text(face = &quot;bold.italic&quot;, size = 10, hjust = 0.5) ) + guides( color = guide_legend(order = 1, override.aes = list(size = 8, linewidth = 5, fill = NA)) #, linetype = c(5,1,1))) , fill = guide_legend(order = 2, override.aes = list(size = 8,linewidth = 0, alpha = 1)) # , color = NA ) # combine cowplot::plot_grid( plotlist = list( NULL , plt_fshed_pa + theme( plot.background = element_rect(color = &quot;gray77&quot;, fill=&quot;white&quot;, linewidth = 1) , plot.margin = margin(0.5,3,0.5,0.5, &quot;cm&quot;) ) , NULL , plt_fshed_pa_incl + theme( plot.background = element_rect(color = &quot;gray77&quot;, fill=&quot;white&quot;, linewidth = 1) , plot.margin = margin(0.5,3,0.5,0.5, &quot;cm&quot;) ) , NULL ) , nrow = 1 , rel_widths = c(0.01,1,0.01,1,0.01) , labels = c(&quot;&quot;,&quot;A&quot;,&quot;&quot;,&quot;B&quot;,&quot;&quot;) , label_size = 17 , label_fontface = &quot;bold&quot; , label_colour = &quot;gray11&quot; # , label_y = 0.99 ) + theme(plot.background = element_rect(fill = &quot;white&quot;, color = NA)) # export ggplot2::ggsave( filename = paste0(&quot;../data/plt_ex_spatial_strctr.png&quot;) , plot = ggplot2::last_plot() , width = 11 , height = 5.8 , units = &quot;in&quot; , dpi = &quot;print&quot; ) Nested within firesheds are project areas of approximately 10,000 ha in size which represent the geographic unit at which vegetation and fuel management projects are planned (Ager et al. 2021). Fireshed project areas that did not have at least 25% of area within the boundary of the Strategy priority landscape were excluded from this analysis. This cutoff was implemented under the assumption that with less than 25% of area available, treatment alone would not substantially affect wildfire behavior across the fireshed (North et al. 2015). For each fireshed project area included in this analysis, the entire area within the project area boundary was used to calculate the percent of mechanically available acreage including area outside of the priority landscape boundary. 4.4 Landscape-level analysis # filter fireshed project area constrained_by_scnro_ls_pa &lt;- constrained_by_scnro_ls_pa %&gt;% dplyr::filter(pct_pa_intrsct&gt;=0.25) 4.4.1 Reduction Treatable Area Table # scnum_temp&lt;-2 tbl_temp &lt;- constrained_by_scnro_ls %&gt;% # dplyr::filter(scenario_id==scnum_temp) %&gt;% dplyr::mutate( dplyr::across( tidyselect::ends_with(&quot;_ha&quot;) , ~ scales::comma(.x, accuracy = 1) ) , dplyr::across( tidyselect::starts_with(&quot;pct_&quot;) , ~ scales::percent(.x, accuracy = 0.1) ) ) %&gt;% dplyr::select( area_name , scenario_lab , covertype_area_ha , pct_covertype_area , pct_rdctn1_protected , pct_rdctn2_slope , pct_rdctn3_roads , pct_rdctn4_riparian , pct_rdctn5_administrative , rmn5_administrative_area_ha , pct_rmn5_administrative ) %&gt;% dplyr::arrange(area_name,desc(scenario_lab)) # make table kableExtra::kable( tbl_temp %&gt;% dplyr::select(-c(area_name)) # , caption = paste0(&quot;&lt;b&gt;&lt;font color=navy&gt;Scenario &quot; # ,scnum_temp # ,&quot;&lt;/font&gt;&lt;/b&gt;&lt;br&gt;percent reduction of different types of constraints on mechanical treatment&quot; # ) , caption = &quot;&lt;b&gt;Wildfire Crisis Strategy 21 Priority Landscapes&lt;/b&gt;&lt;br&gt;percent reduction of different types of constraints on mechanical treatment&quot; , col.names = c( &quot;&quot; , &quot;Forest+Shrub\\n(ha)&quot;, &quot;Forest+Shrub\\n%&quot; , &quot;Protected&quot; , &quot;Slope\\nSteepness&quot; , &quot;Road\\nDistance&quot; , &quot;Riparian\\nBuffer&quot; , &quot;Administrative&quot; , &quot;Remaining (ha)&quot; , &quot;Remaining (%)&quot; ) , escape = F ) %&gt;% add_header_above(c(&quot; &quot; = 1, &quot;Area of\\nPriority Landscape&quot;=2, &quot;Constraint\\nLeast Flexible to Most Flexible&quot; = 5, &quot; &quot; = 2)) %&gt;% kable_classic(full_width=T) %&gt;% pack_rows(index = table(forcats::fct_inorder(tbl_temp$area_name))) %&gt;% kableExtra::kable_styling(font_size = 11,fixed_thead = TRUE) %&gt;% kableExtra::scroll_box(width = &quot;740px&quot;) Table 4.2: Wildfire Crisis Strategy 21 Priority Landscapespercent reduction of different types of constraints on mechanical treatment Area ofPriority Landscape ConstraintLeast Flexible to Most Flexible Forest+Shrub (ha) Forest+Shrub % Protected Slope Steepness Road Distance Riparian Buffer Administrative Remaining (ha) Remaining (%) AZ: 4FRI Scenario 1 2,190,804 90.6% -13.8% -7.5% -26.4% -10.0% -15.2% 592,541 27.0% Scenario 2 2,190,804 90.6% -13.8% -2.0% -13.2% -13.9% -19.7% 819,126 37.4% Scenario 3 2,190,804 90.6% -13.8% -2.0% -13.2% -9.8% 0.0% 1,339,032 61.1% AZ: Prescott Scenario 1 219,110 86.4% -12.1% -16.6% -24.0% -12.1% -5.3% 65,793 30.0% Scenario 2 219,110 86.4% -12.1% -3.2% -12.2% -18.9% -8.3% 99,404 45.4% Scenario 3 219,110 86.4% -12.1% -3.2% -12.2% -13.4% 0.0% 129,550 59.1% AZ: San Carlos Apache Tribal Forest Protection Scenario 1 1,056,065 91.4% -6.1% -20.4% -51.9% -5.8% -0.8% 157,750 14.9% Scenario 2 1,056,065 91.4% -6.1% -5.3% -48.8% -10.2% -1.7% 294,497 27.9% Scenario 3 1,056,065 91.4% -6.1% -5.3% -48.8% -7.3% 0.0% 342,834 32.5% CA: North Yuba Scenario 1 139,202 96.5% -11.6% -33.4% -7.8% -14.7% -2.3% 42,013 30.2% Scenario 2 139,202 96.5% -11.6% -13.9% -3.2% -23.0% -3.3% 62,696 45.0% Scenario 3 139,202 96.5% -11.6% -13.9% -3.2% -16.7% 0.0% 76,029 54.6% CA: Plumas Community Protection Scenario 1 100,872 93.3% 0.0% -23.2% -19.8% -21.5% -1.9% 33,888 33.6% Scenario 2 100,872 93.3% 0.0% -5.2% -8.1% -33.9% -2.9% 50,328 49.9% Scenario 3 100,872 93.3% 0.0% -5.2% -8.1% -24.4% 0.0% 62,810 62.3% CA: Southern California Fireshed Risk Reduction Strategy Scenario 1 1,408,168 86.0% -57.0% -21.0% -8.3% -2.3% -1.4% 139,165 9.9% Scenario 2 1,408,168 86.0% -57.0% -9.6% -6.5% -4.2% -3.0% 277,540 19.7% Scenario 3 1,408,168 86.0% -57.0% -9.6% -6.5% -3.0% 0.0% 336,002 23.9% CA: Stanislaus Scenario 1 116,139 94.3% -2.9% -26.7% -10.6% -24.7% -0.6% 40,057 34.5% Scenario 2 116,139 94.3% -2.9% -10.7% -3.9% -35.8% -0.8% 53,380 46.0% Scenario 3 116,139 94.3% -2.9% -10.7% -3.9% -26.1% 0.0% 65,599 56.5% CA: Trinity Forest Health and Fire-Resilient Rural Communities Scenario 1 295,916 80.4% -12.9% -39.2% -10.8% -10.7% -12.0% 42,598 14.4% Scenario 2 295,916 80.4% -12.9% -11.9% -6.5% -20.7% -24.1% 70,790 23.9% Scenario 3 295,916 80.4% -12.9% -11.9% -6.5% -15.1% 0.0% 158,737 53.6% CO: Colorado Front Range Scenario 1 1,051,540 72.6% -20.4% -19.9% -20.0% -11.3% -1.6% 281,048 26.7% Scenario 2 1,051,540 72.6% -20.4% -5.6% -12.0% -17.3% -3.2% 435,578 41.4% Scenario 3 1,051,540 72.6% -20.4% -5.6% -12.0% -12.3% 0.0% 521,905 49.6% ID: Nez Perce-Clearwater-Lower Salmon Scenario 1 699,884 89.0% -43.0% -19.7% -9.1% -1.4% -0.3% 185,161 26.5% Scenario 2 699,884 89.0% -43.0% -6.7% -5.5% -2.3% -0.7% 292,841 41.8% Scenario 3 699,884 89.0% -43.0% -6.7% -5.5% -1.6% 0.0% 302,267 43.2% ID: Southwest Idaho Scenario 1 608,338 87.6% -13.3% -28.3% -10.4% -2.0% -0.3% 278,231 45.7% Scenario 2 608,338 87.6% -13.3% -7.0% -6.6% -2.8% -0.8% 422,974 69.5% Scenario 3 608,338 87.6% -13.3% -7.0% -6.6% -2.0% 0.0% 432,970 71.2% MT: Kootenai Complex Scenario 1 372,345 91.4% -21.4% -15.0% -7.8% -6.9% -10.6% 142,439 38.3% Scenario 2 372,345 91.4% -21.4% -3.6% -2.1% -8.6% -13.8% 188,288 50.6% Scenario 3 372,345 91.4% -21.4% -3.6% -2.1% -6.1% 0.0% 249,151 66.9% NM: Enchanted Circle Scenario 1 506,460 85.6% -8.5% -21.5% -33.4% -7.5% -2.2% 135,772 26.8% Scenario 2 506,460 85.6% -8.5% -5.2% -25.7% -11.7% -3.7% 228,840 45.2% Scenario 3 506,460 85.6% -8.5% -5.2% -25.7% -8.2% 0.0% 265,124 52.3% NV: Sierra and Elko Fronts Scenario 1 1,003,525 73.2% -26.6% -9.8% -26.9% -6.2% -0.9% 297,023 29.6% Scenario 2 1,003,525 73.2% -26.6% -2.0% -15.8% -8.9% -1.5% 454,449 45.3% Scenario 3 1,003,525 73.2% -26.6% -2.0% -15.8% -6.3% 0.0% 495,822 49.4% OR: Central Oregon Scenario 1 937,977 88.8% -7.2% -2.7% -14.9% -5.1% -10.2% 562,234 59.9% Scenario 2 937,977 88.8% -7.2% -0.5% -4.7% -6.0% -11.6% 656,297 70.0% Scenario 3 937,977 88.8% -7.2% -0.5% -4.7% -4.2% 0.0% 781,760 83.3% OR: Klamath River Basin Scenario 1 2,900,530 77.7% -20.5% -16.9% -17.0% -5.5% -4.6% 1,032,327 35.6% Scenario 2 2,900,530 77.7% -20.5% -5.7% -8.1% -8.6% -8.2% 1,420,954 49.0% Scenario 3 2,900,530 77.7% -20.5% -5.7% -8.1% -6.2% 0.0% 1,729,729 59.6% OR: Mount Hood Forest Health and Fire-Resilient Communities Scenario 1 334,397 76.7% -19.6% -14.2% -16.9% -9.1% -16.4% 79,550 23.8% Scenario 2 334,397 76.7% -19.6% -4.1% -7.3% -13.2% -20.9% 116,660 34.9% Scenario 3 334,397 76.7% -19.6% -4.1% -7.3% -9.5% 0.0% 198,932 59.5% UT: Pine Valley Scenario 1 153,246 94.2% -37.2% -6.9% -21.5% -6.7% 0.0% 42,532 27.8% Scenario 2 153,246 94.2% -37.2% -1.4% -10.5% -9.2% 0.0% 63,919 41.7% Scenario 3 153,246 94.2% -37.2% -1.4% -10.5% -6.5% 0.0% 68,040 44.4% UT: Wasatch Scenario 1 381,429 89.5% -43.0% -12.1% -14.8% -4.9% -0.3% 95,232 25.0% Scenario 2 381,429 89.5% -43.0% -3.7% -7.9% -6.7% -0.5% 145,982 38.3% Scenario 3 381,429 89.5% -43.0% -3.7% -7.9% -4.8% 0.0% 155,181 40.7% WA: Central Washington Initiative Scenario 1 670,440 68.1% -20.6% -32.0% -12.3% -8.5% -12.2% 96,766 14.4% Scenario 2 670,440 68.1% -20.6% -10.4% -7.8% -14.1% -21.8% 168,986 25.2% Scenario 3 670,440 68.1% -20.6% -10.4% -7.8% -10.2% 0.0% 341,540 50.9% WA: Colville Northeast Washington Vision Scenario 1 655,989 92.8% -20.1% -18.5% -16.0% -10.1% -1.2% 223,368 34.1% Scenario 2 655,989 92.8% -20.1% -3.8% -7.5% -14.4% -2.0% 342,407 52.2% Scenario 3 655,989 92.8% -20.1% -3.8% -7.5% -10.4% 0.0% 382,335 58.3% 4.4.2 Change in Available by Scenario constrained_by_scnro_ls %&gt;% dplyr::mutate(scenario_lab = scenario_lab %&gt;% forcats::fct_rev()) %&gt;% ggplot( mapping = aes(x=scenario_lab,y=pct_rmn5_administrative,group=area_name) ) + geom_line(mapping=aes(color = area_name), linewidth = 1.5) + geom_label( mapping=aes(label = scales::percent(pct_rmn5_administrative, scale = 100, accuracy = 1)) , color = &quot;black&quot; , size = 3 , label.padding = unit(0.15, &quot;lines&quot;) ) + facet_wrap(facets = vars(area_name) , ncol = 3 , labeller = label_wrap_gen(width = 35, multi_line = TRUE) , scales = &quot;free_x&quot; ) + scale_color_viridis_d(option = &quot;turbo&quot;, alpha = 0.8) + scale_y_continuous(expand = expansion(mult = c(0.1, 0.1)), labels = scales::percent_format(), breaks = scales::extended_breaks(6)) + # scale_x_discrete(labels = scales::label_wrap(20)) + labs( x = &quot;Most Restrictive \\U2192 Least Restrictive&quot; , y = &quot;Percent Treatable Area Remaining&quot; ) + theme_light() + theme( legend.position = &quot;none&quot; , axis.text.y = element_text(size=7) , axis.text.x = element_text(size=7.5) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;, size = 10) ) 4.4.3 Reduction by Constraint # reshape constrained_by_scnro_ls_long &lt;- constrained_by_scnro_ls %&gt;% dplyr::select(state, name, area_name, tidyselect::starts_with(&quot;scenario_&quot;), tidyselect::starts_with(&quot;pct_rdctn&quot;)) %&gt;% tidyr::pivot_longer( cols = tidyselect::starts_with(&quot;pct_rdctn&quot;) , names_to = &quot;constraint&quot; , values_to = &quot;pct_rdctn&quot; , names_prefix = &quot;pct_rdctn&quot; , values_drop_na = F ) %&gt;% tidyr::separate_wider_delim(constraint, &quot;_&quot;, names = c(&quot;constraint_lvl&quot;, &quot;constraint&quot;)) %&gt;% dplyr::mutate( constraint_lvl = as.numeric(constraint_lvl) , constraint = factor( constraint , ordered = TRUE , levels = c( &quot;protected&quot; , &quot;slope&quot; , &quot;roads&quot; , &quot;riparian&quot; , &quot;administrative&quot; , &quot;total&quot; ) , labels = c( &quot;Protected&quot; , &quot;Slope\\nSteepness&quot; , &quot;Road\\nDistance&quot; , &quot;Riparian\\nBuffer&quot; , &quot;Administrative&quot; , &quot;Total&quot; ) ) %&gt;% forcats::fct_rev() ) %&gt;% dplyr::left_join( constrained_by_scnro_ls %&gt;% dplyr::select(state,name,scenario_id,pct_rdctn_total) , by = join_by(state,name,scenario_id) ) # color pallete removing dark blue n_temp &lt;- ((constrained_by_scnro_ls_long$constraint %&gt;% unique() %&gt;% length())-1)*2 plasma_custom &lt;- viridis::plasma(n = n_temp)[seq(2,n_temp,2)] # scales::show_col(plasma_custom) # plasma_custom # plot ggplot( data = constrained_by_scnro_ls_long %&gt;% dplyr::filter(constraint!=&quot;Total&quot;) %&gt;% dplyr::mutate( dplyr::across( c(scenario_lab, area_name) , ~ forcats::fct_rev(.x) ) ) , mapping = aes(y = area_name, x = pct_rdctn) ) + geom_col( mapping = aes(fill = constraint) , color = NA, width = 0.7 , alpha = 0.7 ) + geom_text( mapping = aes( label = scales::percent(ifelse(pct_rdctn&lt;0.11*-1,pct_rdctn,NA), accuracy = 1) , group = constraint , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 2.3 ) + geom_text( data = constrained_by_scnro_ls_long %&gt;% dplyr::filter(constraint==&quot;Total&quot;) %&gt;% dplyr::mutate( dplyr::across( c(scenario_lab, area_name) , ~ forcats::fct_rev(.x) ) ) , mapping = aes( y = area_name, x = pct_rdctn_total , label = scales::percent(pct_rdctn_total, accuracy = 1) ) , color = &quot;black&quot;, size = 3.5 , hjust = -0.1 ) + facet_grid(cols = vars(scenario_lab)) + # scale_fill_viridis_d(option = &quot;plasma&quot;) + scale_fill_manual(values = plasma_custom) + scale_x_reverse(expand = expansion(mult = c(0.04, .3)),labels = scales::percent_format()) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;Constraint Reduction in Treatable Area (%)&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_blank() # , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9)) ) ggplot2::ggsave( filename = paste0(&quot;../data/plt_cnstrnt_rdctn_ls.png&quot;) , plot = ggplot2::last_plot() , width = 11 , height = 8.5 , units = &quot;in&quot; , dpi = &quot;print&quot; ) Adding in bar for remaining area: # palette cols_cnstrnt_avail &lt;- c(&quot;#7A0403&quot;,&quot;#466BE3&quot;) constrained_by_scnro_ls_long %&gt;% dplyr::mutate( constraint = forcats::fct_recode(constraint,&quot;Available&quot;=&quot;Total&quot;) , pct_rdctn_hack = ifelse(constraint==&quot;Available&quot;, 1+pct_rdctn, pct_rdctn) ) %&gt;% dplyr::mutate( dplyr::across( c(constraint) , ~ forcats::fct_rev(.x) ) ) %&gt;% # plot ggplot( mapping = aes( y = scenario_lab , x = pct_rdctn_hack , fill = constraint , group = constraint ) ) + geom_col( width = 0.7, alpha = 0.9 ) + geom_vline(xintercept = 0, color = &quot;gray55&quot;, linetype = &quot;solid&quot;, linewidth = 0.7) + geom_text( mapping = aes( label = scales::percent( ifelse(pct_rdctn&lt;0.145*-1 &amp; constraint!=&quot;Available&quot;,pct_rdctn*-1,NA) , accuracy = 1 ) , group = constraint , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 1.8 ) + geom_text( mapping = aes( label = scales::percent( ifelse(constraint==&quot;Available&quot;,pct_rdctn_hack,NA) , accuracy = 1 ) , group = constraint , fontface = &quot;bold&quot; ) , color = &quot;black&quot;, size = 2.7 , hjust = -0.1 ) + annotate( geom = &quot;text&quot; , x = -0.78 , y = 0 , label = &quot;constrained&quot; , color = cols_cnstrnt_avail[1] , fontface = &quot;bold&quot; , size = 2.5 ) + annotate( geom = &quot;text&quot; , x = 0.88 , y = 0 , label = &quot;available&quot; , color = cols_cnstrnt_avail[2] , fontface = &quot;bold&quot; , size = 2.5 ) + scale_fill_manual(values = c(rev(plasma_custom), cols_cnstrnt_avail[2])) + scale_x_continuous( limits = c(-1.00,1.02) , labels = scales::percent_format() ) + scale_y_discrete(expand = expansion(mult = c(0.8,0.3))) + facet_wrap( facets = vars(area_name) , ncol = 3 , labeller = label_wrap_gen(width = 35, multi_line = TRUE) , scales = &quot;free_y&quot; ) + labs( fill = &quot;&quot; , x = &quot;Percent of Forest &amp; Shrub Area in Overall Landscape&quot; , subtitle = &quot;&quot; , y = &quot;&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size=7) , axis.title.x = element_text(size=10, face = &quot;bold&quot;) , axis.title.y = element_blank() , axis.text.x = element_blank() , axis.ticks.x = element_blank() , panel.grid.major = element_blank() , panel.grid.minor = element_blank() , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;, size = 9) ) + guides(fill = guide_legend(nrow = 1)) # export ggplot2::ggsave( filename = paste0(&quot;../data/plt_cnstrnt_avail.png&quot;) , plot = ggplot2::last_plot() , width = 8.5 , height = 11 , units = &quot;in&quot; , dpi = &quot;print&quot; ) 4.5 Fireshed-level analysis Based on model simulations of how much area generally needs to be treated to influence wildfire behavior, we binned the firesheds into three classes of mechanical constraint: high (81–100% [i.e., only 0–19% is available for mechanical treatment]): fuels treatment would principally need to rely on fire medium (60–80% [i.e., 20–40% is available]): could use a combination of fire and mechanical thinning low (60% [i.e., &gt;40% is available]): could effectively influence wildfire behavior with mechanical treatment alone 4.5.1 Distribution of Fireshed PA Constraint constrained_by_scnro_ls_pa %&gt;% dplyr::count(area_name,scenario_lab,cnstrnt_class) %&gt;% dplyr::group_by(area_name,scenario_lab) %&gt;% dplyr::mutate( pct = n/sum(n) , high_pct=max(ifelse(cnstrnt_class==&quot;high constraint&quot;,pct,0)) , tot = sum(n) , scenario_lab = scenario_lab %&gt;% forcats::fct_rev() ) %&gt;% ggplot() + geom_col( mapping = aes(x = pct, y = reorder(area_name, desc(area_name)), fill=cnstrnt_class) ,width = 0.7, alpha=0.8 ) + geom_text( mapping = aes(x = pct, y = reorder(area_name, desc(area_name)), group=cnstrnt_class ,label = scales::percent(ifelse(pct&gt;=0.055,pct,NA), accuracy = 1) , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 2.3 ) + # geom_text( # data = constrained_byftr_huc12_wide %&gt;% # dplyr::group_by(area_name) %&gt;% # dplyr::summarise(n=n(), high_n=sum(ifelse(cnstrnt_class==&quot;high constraint&quot;,1,0))) # , mapping = aes(x = -0.05,y=reorder(area_name, -(high_n/n)),label=paste0(&quot;n=&quot;,scales::comma(n))) # , size = 3 # , color = &quot;black&quot; # , hjust = 0.7 # ) + scale_fill_brewer(type = &quot;div&quot;, palette = &quot;RdYlBu&quot;, direction = -1) + facet_grid(cols = vars(scenario_lab)) + scale_x_continuous(labels = scales::percent_format()) + labs( fill = &quot;Level of\\nConstraint&quot; , y = &quot;&quot; , x = &quot;Percent of Fireshed Project Areas&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.title = element_text(size=7) , axis.text.x = element_text(size=7) , axis.title.x = element_text(size=10, face = &quot;bold&quot;) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9)) ) ggplot2::ggsave( filename = paste0(&quot;../data/plt_fpa_cnstrnt_dist.png&quot;) , plot = ggplot2::last_plot() , width = 11 , height = 8.5 , units = &quot;in&quot; , dpi = &quot;print&quot; ) 4.5.2 Distribution of Fireshed Area # plot ggplot(data = constrained_by_scnro_ls_pa %&gt;% dplyr::filter(scenario_id==1) , mapping = aes(x = feature_area_ha, y = reorder(area_name,desc(area_name) )) ) + geom_vline( xintercept = constrained_by_scnro_ls_pa %&gt;% dplyr::filter(scenario_id==1) %&gt;% dplyr::pull(feature_area_ha) %&gt;% median() , linetype=&quot;dashed&quot;, color=&quot;gray66&quot; ) + geom_violin(aes(fill = state)) + geom_boxplot(width = 0.15) + # geom_point(size = 0.7, color = &quot;gray33&quot;, alpha = 0.2) + geom_text( data = constrained_by_scnro_ls_pa %&gt;% dplyr::filter(scenario_id==1) %&gt;% dplyr::group_by(area_name) %&gt;% dplyr::summarise(n=n(), max_area=max(feature_area_ha)) , mapping = aes( x = ( constrained_by_scnro_ls_pa %&gt;% dplyr::filter(scenario_id==1) %&gt;% dplyr::pull(feature_area_ha) %&gt;% min() )*.9 ,y=reorder(area_name,desc(area_name) ) ,label=paste0(&quot;n=&quot;,scales::comma(n)) ) , size = 3 , color = &quot;black&quot; , hjust = 0.7 ) + scale_fill_viridis_d(option = &quot;viridis&quot;, alpha = 0.8) + scale_x_continuous(labels = scales::comma, breaks = scales::extended_breaks(n=7)) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;Fireshed Area (ha)&quot; ) + theme_light() + theme( legend.position = &quot;none&quot; # c(0.9, 0.9) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) ) 4.5.3 Map of Firesheds by Level of Constraint # polish for mapping map_fs_temp &lt;- fireshed_proj_area %&gt;% dplyr::select(pa_id, geometry) %&gt;% dplyr::mutate(pa_id=as.character(pa_id)) %&gt;% dplyr::inner_join( constrained_by_scnro_ls_pa , by = dplyr::join_by(&quot;pa_id&quot;) , multiple = &quot;all&quot; ) %&gt;% dplyr::mutate( dplyr::across( tidyselect::starts_with(&quot;pct_&quot;) , ~ scales::percent(as.numeric(.x), accuracy = 0.1) ) , dplyr::across( tidyselect::ends_with(&quot;_ha&quot;) , ~ scales::comma(as.numeric(.x), accuracy = 1) ) , scenario_lab = scenario_lab %&gt;% forcats::fct_rev() ) %&gt;% dplyr::mutate( Priority.Area.Name = area_name , Level.of.Constraint = cnstrnt_class , Pct.Treatable.Class = rmn_cnstrnt_class , Fireshed.ProjArea.ID = pa_id , Fireshed.ProjArea.Area.Hectares = feature_area_ha , Fireshed.WCS.Status = ifelse(is.na(fireshed_crisis_strategy),&quot;Not High Risk&quot;,fireshed_crisis_strategy) , ForestShrub.Area.Hectares = covertype_area_ha , Pct.Rdctn.Protected = pct_rdctn1_protected , Pct.Rdctn.Slope = pct_rdctn2_slope , Pct.Rdctn.Roads = pct_rdctn3_roads , Pct.Rdctn.Riparian = pct_rdctn4_riparian , Pct.Rdctn.Administrative = pct_rdctn5_administrative , Treatable.Area.Hectares = rmn5_administrative_area_ha , Pct.Treatable.Area = pct_rmn5_administrative ) # filter for mapview mapview_fs_temp &lt;- map_fs_temp %&gt;% dplyr::filter( scenario_id == 2 ) # ## filter for high priority only # hi_map_fs_temp &lt;- map_fs_temp %&gt;% # dplyr::filter(!is.na(fireshed_crisis_strategy)) # filter for mapview mapview_fs_sc1_temp &lt;- map_fs_temp %&gt;% dplyr::filter( scenario_id == 1 ) mapview_fs_sc3_temp &lt;- map_fs_temp %&gt;% dplyr::filter( scenario_id == 3 ) mapview_fs_sc3_hi_temp &lt;- map_fs_temp %&gt;% dplyr::filter( scenario_id == 3 &amp; fireshed_crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;) ) # mapview mapview::mapviewOptions(homebutton = FALSE, basemaps = c(&quot;OpenStreetMap&quot;,&quot;Esri.WorldImagery&quot;)) mapview::mapview(wf_landscapes , color = &quot;black&quot; , lwd = 1 , alpha.regions = 0 , label = FALSE , legend = FALSE , popup = FALSE , layer.name = &quot;WCS Landscapes&quot; , hide = TRUE ) + mapview::mapview( mapview_fs_temp , zcol = &quot;cnstrnt_class&quot; , col.regions = RColorBrewer::brewer.pal(n=3,name=&quot;RdYlBu&quot;) %&gt;% rev() , alpha.regions = 0.6 , lwd = 0.2 , label = FALSE , legend = FALSE , layer.name = &quot;Scenario 2 Constraints&quot; , hide = FALSE , popup = leafpop::popupTable( mapview_fs_temp , zcol = c( &quot;Priority.Area.Name&quot; , &quot;Level.of.Constraint&quot; , &quot;Pct.Treatable.Class&quot; , &quot;Fireshed.ProjArea.ID&quot; , &quot;Fireshed.ProjArea.Area.Hectares&quot; , &quot;Fireshed.WCS.Status&quot; , &quot;ForestShrub.Area.Hectares&quot; , &quot;Pct.Rdctn.Protected&quot; , &quot;Pct.Rdctn.Slope&quot; , &quot;Pct.Rdctn.Roads&quot; , &quot;Pct.Rdctn.Riparian&quot; , &quot;Pct.Rdctn.Administrative&quot; , &quot;Treatable.Area.Hectares&quot; , &quot;Pct.Treatable.Area&quot; ) , row.numbers = FALSE , feature.id = FALSE ) ) + mapview::mapview( mapview_fs_sc1_temp , zcol = &quot;cnstrnt_class&quot; , col.regions = RColorBrewer::brewer.pal(n=3,name=&quot;RdYlBu&quot;) %&gt;% rev() , alpha.regions = 0.6 , lwd = 0.2 , label = FALSE , legend = FALSE , layer.name = &quot;Scenario 1 Constraints&quot; , hide = TRUE , popup = leafpop::popupTable( mapview_fs_sc1_temp , zcol = c( &quot;Priority.Area.Name&quot; , &quot;Level.of.Constraint&quot; , &quot;Pct.Treatable.Class&quot; , &quot;Fireshed.ProjArea.ID&quot; , &quot;Fireshed.ProjArea.Area.Hectares&quot; , &quot;Fireshed.WCS.Status&quot; , &quot;ForestShrub.Area.Hectares&quot; , &quot;Pct.Rdctn.Protected&quot; , &quot;Pct.Rdctn.Slope&quot; , &quot;Pct.Rdctn.Roads&quot; , &quot;Pct.Rdctn.Riparian&quot; , &quot;Pct.Rdctn.Administrative&quot; , &quot;Treatable.Area.Hectares&quot; , &quot;Pct.Treatable.Area&quot; ) , row.numbers = FALSE , feature.id = FALSE ) ) + mapview::mapview( mapview_fs_sc3_temp , zcol = &quot;cnstrnt_class&quot; , col.regions = RColorBrewer::brewer.pal(n=3,name=&quot;RdYlBu&quot;) %&gt;% rev() , alpha.regions = 0.6 , lwd = 0.2 , label = FALSE , legend = FALSE , layer.name = &quot;Scenario 3 Constraints&quot; , hide = TRUE , popup = leafpop::popupTable( mapview_fs_sc3_temp , zcol = c( &quot;Priority.Area.Name&quot; , &quot;Level.of.Constraint&quot; , &quot;Pct.Treatable.Class&quot; , &quot;Fireshed.ProjArea.ID&quot; , &quot;Fireshed.ProjArea.Area.Hectares&quot; , &quot;Fireshed.WCS.Status&quot; , &quot;ForestShrub.Area.Hectares&quot; , &quot;Pct.Rdctn.Protected&quot; , &quot;Pct.Rdctn.Slope&quot; , &quot;Pct.Rdctn.Roads&quot; , &quot;Pct.Rdctn.Riparian&quot; , &quot;Pct.Rdctn.Administrative&quot; , &quot;Treatable.Area.Hectares&quot; , &quot;Pct.Treatable.Area&quot; ) , row.numbers = FALSE , feature.id = FALSE ) ) + mapview::mapview( mapview_fs_sc3_hi_temp , zcol = &quot;cnstrnt_class&quot; , col.regions = RColorBrewer::brewer.pal(n=3,name=&quot;RdYlBu&quot;) %&gt;% rev() , alpha.regions = 0.6 , lwd = 0.2 , label = FALSE , legend = FALSE , layer.name = &quot;Scenario 3 Constraints (High Only)&quot; , hide = TRUE , popup = leafpop::popupTable( mapview_fs_sc3_hi_temp , zcol = c( &quot;Priority.Area.Name&quot; , &quot;Level.of.Constraint&quot; , &quot;Pct.Treatable.Class&quot; , &quot;Fireshed.ProjArea.ID&quot; , &quot;Fireshed.ProjArea.Area.Hectares&quot; , &quot;Fireshed.WCS.Status&quot; , &quot;ForestShrub.Area.Hectares&quot; , &quot;Pct.Rdctn.Protected&quot; , &quot;Pct.Rdctn.Slope&quot; , &quot;Pct.Rdctn.Roads&quot; , &quot;Pct.Rdctn.Riparian&quot; , &quot;Pct.Rdctn.Administrative&quot; , &quot;Treatable.Area.Hectares&quot; , &quot;Pct.Treatable.Area&quot; ) , row.numbers = FALSE , feature.id = FALSE ) ) # **Scenario 2 used for map above** 4.5.4 Map of Fireshed Project Areas by Scenario plt_fn_temp &lt;- function(scnum=1) { plt_basemap_simple + geom_sf(data = map_fs_temp %&gt;% dplyr::filter(scenario_id==scnum) , aes(fill = cnstrnt_class), lwd = 0.05) + geom_sf( data = wf_landscapes # , mapping = aes(color = paste0(investment, &quot; investment&quot;)) , fill=NA , color=&quot;black&quot; , lwd=0.2 )+ geom_text( data = wf_landscapes %&gt;% sf::st_drop_geometry() %&gt;% sf::st_as_sf(coords = c(&quot;lon&quot;,&quot;lat&quot;)) %&gt;% sf::st_set_crs(4326) %&gt;% sf::st_transform(transform_crs) , aes( label = stringr::str_wrap( dplyr::case_when( stringr::str_count(name, &quot;\\\\w+&quot;)&lt;2 ~ stringr::word(name,1,stringr::str_count(name, &quot;\\\\w+&quot;)) , stringr::str_starts(name,&quot;Sierra and Elko&quot;) ~ stringr::word(name,1,3) , TRUE ~ stringr::word(name,1,2) ) , 7) # , color = paste0(investment, &quot; investment&quot;) , geometry = geometry , fontface = &quot;bold.italic&quot; ) , color = &quot;black&quot; , stat = &quot;sf_coordinates&quot; , size = 2 # , seed = 11 # , min.segment.length = 0 , show.legend = F ) + # scale_color_manual(values = c(&quot;black&quot;, &quot;gray33&quot;)) + scale_fill_brewer(type = &quot;div&quot;, palette = &quot;RdYlBu&quot;, direction = -1) + labs( fill = &quot;&quot; , tag = paste0( map_fs_temp %&gt;% dplyr::filter(scenario_id==scnum) %&gt;% dplyr::pull(scenario_lab) %&gt;% unique() , &quot; Map&quot; ) ) + theme( legend.position = c(0.8,0.9) # &quot;top&quot; , legend.text = element_text(size = 7) , plot.title = element_text(face = &quot;bold&quot;, size = 9, margin = margin(0,0,30,0)) , plot.tag = element_text(face = &quot;bold&quot;, size = 10) , plot.tag.position = c(0.1,0.98) # &quot;top&quot; # , plot.tag.position = c(0.8,0.94) # &quot;top&quot; ) + guides(color = &quot;none&quot;) } # plot # plt_fn_temp() plt_fpas_sc_map &lt;- map_fs_temp %&gt;% dplyr::pull(scenario_id) %&gt;% unique() %&gt;% purrr::map(plt_fn_temp) plt_fpas_sc_map 4.5.5 Map Fireshed Project Areas by Scenario and Landscape How do small multiple maps of scenarios look? the answer is: bad see this post about small multiple maps area_nm_list &lt;- sort(unique(constrained_by_scnro_ls$area_name)) facet_map_fn &lt;- function(row_n=1) { plt &lt;- ggplot() + geom_sf( data = map_fs_temp %&gt;% dplyr::filter( area_name == area_nm_list[row_n] ) , aes(fill = cnstrnt_class), lwd = 0.05 ) + geom_sf( data = wf_landscapes %&gt;% dplyr::filter( area_name == area_nm_list[row_n] ) , color = &quot;black&quot; , fill=NA , lwd=0.2 ) + facet_grid( cols = vars(scenario_lab) , rows = vars(area_name) , labeller = label_wrap_gen(width = 35, multi_line = TRUE) , switch = &quot;both&quot; # , switch = &quot;x&quot; ) + scale_color_manual(values = c(&quot;black&quot;, &quot;gray33&quot;)) + scale_fill_brewer(type = &quot;div&quot;, palette = &quot;RdYlBu&quot;, direction = -1) + labs( fill = &quot;&quot; , tag = stringr::str_wrap(area_nm_list[row_n], 35) # scales::label_wrap(area_nm_list[row_n], 10) ) + theme_void() + # theme_light() + theme( legend.position = &quot;none&quot; # , legend.text = element_text(size = 7) , plot.subtitle = element_text(face = &quot;bold&quot;, size = 9, hjust = 0.5, vjust = -5) # attempting to fix facet labels not aligning , strip.text.x = element_text(size = 8, vjust = 1) , strip.text.y = element_blank() , plot.tag.position = c(.5, 0.98) , plot.tag = element_text(size = 8, face = &quot;bold&quot;) # , plot.background = element_rect(color = &quot;gray88&quot;, fill=NA, size=0.5) , plot.margin = margin(0, 0, 0, 0, &quot;cm&quot;) # facet labels not alinging in plot_grid # , strip.text.x = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) # , strip.text.y.left = element_text(angle = 0) # , strip.placement = &quot;outside&quot; ) + guides(color = &quot;none&quot;) return(plt) } # print(facet_map_fn()) plt_list &lt;- 1:length(area_nm_list) %&gt;% purrr::map(facet_map_fn) # combine scenario_maps &lt;- cowplot::plot_grid( plotlist = plt_list #[1:4] , ncol = 3 , align = &quot;hv&quot; ) # scenario_maps # plot_grid didn&#39;t work ;( plt_list[16] # plt_list Make each plot individually by landscape ######################################################################### ######################################################################### ######################################################################### ##################hack to align plots for ggmap ggmap_bbox_fn &lt;- function(map, my_crs=3857) { if (!inherits(map, &quot;ggmap&quot;)) stop(&quot;map must be a ggmap object&quot;) # Extract the bounding box (in lat/lon) from the ggmap to a numeric vector, # and set the names to what sf::st_bbox expects: map_bbox &lt;- setNames(unlist(attr(map, &quot;bb&quot;)), c(&quot;ymin&quot;, &quot;xmin&quot;, &quot;ymax&quot;, &quot;xmax&quot;)) # Convert the bbox to an sf polygon, transform it to 3857, # and convert back to a bbox (convoluted, but it works) bbox_3857 &lt;- st_bbox(st_transform(st_as_sfc(st_bbox(map_bbox, crs = 4326)), my_crs)) # Overwrite the bbox of the ggmap object with the transformed coordinates attr(map, &quot;bb&quot;)$ll.lat &lt;- bbox_3857[&quot;ymin&quot;] attr(map, &quot;bb&quot;)$ll.lon &lt;- bbox_3857[&quot;xmin&quot;] attr(map, &quot;bb&quot;)$ur.lat &lt;- bbox_3857[&quot;ymax&quot;] attr(map, &quot;bb&quot;)$ur.lon &lt;- bbox_3857[&quot;xmax&quot;] map } plt_crs &lt;- 3857 ######################################################################### ######################################################################### ######################################################################### area_nm_list &lt;- sort(unique(constrained_by_scnro_ls$area_name)) # buffer for smaller areas if_smaller_ha_temp &lt;- wf_landscapes %&gt;% dplyr::pull(hectares) %&gt;% quantile(0.45) %&gt;% purrr::pluck(1) # create color palette cols_rdylbu_lt &lt;- c( &quot;low constraint&quot; = rev(RColorBrewer::brewer.pal(n=3,name=&quot;RdYlBu&quot;))[1] , &quot;med. constraint&quot; = rev(RColorBrewer::brewer.pal(n=3,name=&quot;RdYlBu&quot;))[2] , &quot;high constraint&quot; = rev(RColorBrewer::brewer.pal(n=3,name=&quot;RdYlBu&quot;))[3] ) # function to plot basemap landscape_basemap_fn &lt;- function(row_n=1) { # should zoom in? zoom_level &lt;- dplyr::case_when( area_nm_list[row_n] %in% c( &quot;WA: Colville Northeast Washington Vision&quot; , &quot;CA: Southern California Fireshed Risk Reduction Strategy&quot; ) ~ 7 , area_nm_list[row_n] %in% c( &quot;UT: Wasatch&quot; , &quot;CA: Trinity Forest Health and Fire-Resilient Rural Communities&quot; , &quot;ID: Nez Perce-Clearwater-Lower Salmon&quot; , &quot;NV: Sierra and Elko Fronts&quot; , &quot;OR: Mount Hood Forest Health and Fire-Resilient Communities&quot; ) ~ 8 , area_nm_list[row_n] %in% c( &quot;CA: Plumas Community Protection&quot; , &quot;CA: North Yuba&quot; , &quot;MT: Kootenai Complex&quot; , &quot;UT: Pine Valley&quot; ) ~ 9 , (wf_landscapes %&gt;% dplyr::filter( area_name == area_nm_list[row_n] ) %&gt;% dplyr::pull(hectares) %&gt;% purrr::pluck(1) &lt;= if_smaller_ha_temp ) ~ 10 , TRUE ~ 8 ) # should buffer extend? buffer_box &lt;- dplyr::case_when( area_nm_list[row_n] %in% c(&quot;WA: Colville Northeast Washington Vision&quot;) ~ 50000 , area_nm_list[row_n] %in% c( &quot;CA: Southern California Fireshed Risk Reduction Strategy&quot; , &quot;ID: Nez Perce-Clearwater-Lower Salmon&quot; , &quot;MT: Kootenai Complex&quot; ) ~ 40000 , area_nm_list[row_n] %in% c( &quot;AZ: San Carlos Apache Tribal Forest Protection&quot; , &quot;NV: Sierra and Elko Fronts&quot; , &quot;UT: Pine Valley&quot; ) ~ 21000 , area_nm_list[row_n] %in% c( &quot;CA: Plumas Community Protection&quot; , &quot;CA: North Yuba&quot; , &quot;CA: Trinity Forest Health and Fire-Resilient Rural Communities&quot; , &quot;OR: Mount Hood Forest Health and Fire-Resilient Communities&quot; ) ~ 35000 , area_nm_list[row_n] %in% c(&quot;UT: Wasatch&quot;) ~ 5000 , (wf_landscapes %&gt;% dplyr::filter( area_name == area_nm_list[row_n] ) %&gt;% dplyr::pull(hectares) %&gt;% purrr::pluck(1) &lt;= if_smaller_ha_temp ) ~ 15000 , TRUE ~ 5000 ) # bounding box bb_temp &lt;- map_fs_temp %&gt;% dplyr::filter( area_name == area_nm_list[row_n] ) %&gt;% sf::st_union() %&gt;% sf::st_transform(crs=5070) %&gt;% sf::st_buffer(as.numeric(buffer_box)) %&gt;% sf::st_transform(crs=4326) %&gt;% # same as get_map return sf::st_bbox() # set bbox for get call bbox_temp &lt;- c( bottom = bb_temp[[2]] , top = bb_temp[[4]] , right = bb_temp[[3]] , left = bb_temp[[1]] ) # get map hey_ggmap &lt;- ggmap::get_stamenmap( bbox = bbox_temp , zoom = zoom_level , maptype = &quot;terrain&quot; #&quot;toner-hybrid&quot; # &quot;terrain&quot; , crop = T ) # ggmap(hey_ggmap) # apply align function hey_ggmap_aligned &lt;- ggmap_bbox_fn(hey_ggmap, plt_crs) # Use the function # plot plt &lt;- ggmap(hey_ggmap_aligned) + coord_sf( expand = FALSE ) + labs( title = area_nm_list[row_n] ) + theme_light() + theme( legend.position = &quot;bottom&quot; , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size=7) , legend.margin = margin(c(-10,0,0,0)) , plot.title = element_text(size = 11) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) , axis.title = element_blank() , axis.text = element_blank() , axis.ticks = element_blank() , panel.grid = element_blank() , plot.margin = margin(0, 0, 0, 0, &quot;cm&quot;) ) # return return(plt) } # landscape_basemap_fn(row_n = 9) # function to plot scenario constraints + basemap scenario_cnstrnt_map_fn &lt;- function(row_n = 1) { plt &lt;- landscape_basemap_fn(row_n) + geom_sf( data = map_fs_temp %&gt;% dplyr::filter( area_name == area_nm_list[row_n] ) %&gt;% sf::st_transform(crs=plt_crs) , aes(fill = cnstrnt_class), lwd = 0.05 , inherit.aes = F , alpha = 0.6 ) + geom_sf( data = wf_landscapes %&gt;% dplyr::filter( area_name == area_nm_list[row_n] ) %&gt;% sf::st_transform(crs=plt_crs) , fill = NA, color = &quot;black&quot;, lwd = 0.3 , inherit.aes = F ) + facet_grid( cols = vars(scenario_lab) , labeller = label_wrap_gen(width = 35, multi_line = TRUE) # , switch = &quot;both&quot; ) + scale_fill_manual(values = cols_rdylbu_lt) + labs( fill = &quot;Level of\\nConstraint&quot; ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9)) ) # return return(plt) } # scenario_cnstrnt_map_fn(row_n = 9) # go through list of areas to make plot plt_list &lt;- 1:length(area_nm_list) %&gt;% purrr::map(scenario_cnstrnt_map_fn) # scenario_maps plt_list[] #### # area_nm_list # scenario_cnstrnt_map_fn(18) 4.5.6 Patch Analysis Notes from Collins et al. 2010: The larger the individual fuel treatment the greater the potential for tree survival, because of reduced edge effect mortality (Ritchie et al. 2007). Larger individual treatments have a greater potential to reduce fire behavior and slow fire spread, which ultimately impacts adjacent untreated stands and should enhance suppression opportunities and increase firefighter safety (Collins et al. 2010). Planning fewer, larger individual treatments across the landscape appears to be a better strategy when human community protection is a primary concern (Schmidt et al. 2008). Finney et al. (2007) note that the relative improvement of optimized treatment placement breaks down when larger proportions of the landscape (40–50%) are excluded from treatment because of land-management constraints. # create spatial data of interconnected patches by constraint class # this is to represent the spatial aggregation of fireshed project areas of similar levels of mechanical constraint # aggregation = Tendency of patch or land-cover types to be spatially adjacent or in close proximity cnstrnt_class_patches &lt;- fireshed_proj_area %&gt;% dplyr::mutate(pa_id=as.character(pa_id)) %&gt;% dplyr::inner_join( constrained_by_scnro_ls_pa %&gt;% dplyr::select(pa_id, area_name, scenario_id, scenario_lab, cnstrnt_class) , by = dplyr::join_by(pa_id) , multiple = &quot;all&quot; ) %&gt;% # union vectors/polygons by constraint class into one multipolygon # this dissolves inner boundaries by constraint class dplyr::group_by(area_name, scenario_id, scenario_lab, cnstrnt_class) %&gt;% dplyr::summarize( geometry = sf::st_union(geometry, by_feature = F) ) %&gt;% # separate a multipolygon geometry into several polygons objects after performing a st_union() sf::st_cast(to = &quot;MULTIPOLYGON&quot;) %&gt;% st_cast(to = &quot;POLYGON&quot;) %&gt;% # calculate patch area dplyr::ungroup() %&gt;% dplyr::group_by(area_name, scenario_id, scenario_lab, cnstrnt_class) %&gt;% dplyr::mutate( patch_area_ha = as.numeric(sf::st_area(geometry))/10000 , patch_area_rank = dplyr::dense_rank(dplyr::desc(patch_area_ha)) ) %&gt;% dplyr::ungroup() %&gt;% dplyr::arrange(scenario_id, area_name, cnstrnt_class, dplyr::desc(patch_area_ha)) %&gt;% # calculate proportion of total area in each patch dplyr::inner_join( # total area of fireshed project areas included for analysis # after union to remove internal boundaries fireshed_proj_area %&gt;% dplyr::mutate(pa_id=as.character(pa_id)) %&gt;% dplyr::inner_join( constrained_by_scnro_ls_pa %&gt;% dplyr::filter(scenario_id==1) %&gt;% dplyr::select(pa_id, area_name) , by = dplyr::join_by(pa_id) , multiple = &quot;all&quot; ) %&gt;% dplyr::group_by(area_name) %&gt;% dplyr::summarize( geometry = sf::st_union(geometry, by_feature = F) ) %&gt;% dplyr::mutate( total_area_ha = as.numeric(sf::st_area(geometry))/10000 ) %&gt;% sf::st_drop_geometry() , by = dplyr::join_by(area_name) ) %&gt;% dplyr::mutate( pct_patch_landscape = patch_area_ha / total_area_ha ) # function to highlight largest patch with fireshed project areas under cols_rdylbu_dk &lt;- c( &quot;low constraint&quot; = rev(RColorBrewer::brewer.pal(n=11,name=&quot;RdYlBu&quot;))[2] , &quot;med. constraint&quot; = rev(RColorBrewer::brewer.pal(n=11,name=&quot;RdYlBu&quot;))[7] , &quot;high constraint&quot; = rev(RColorBrewer::brewer.pal(n=11,name=&quot;RdYlBu&quot;))[10] ) largest_patch_map_fn &lt;- function(nrow = 1){ plt &lt;- scenario_cnstrnt_map_fn(nrow) + geom_sf( data = cnstrnt_class_patches %&gt;% dplyr::filter( area_name == area_nm_list[nrow] &amp; patch_area_rank == 1 &amp; cnstrnt_class != &quot;med. constraint&quot; ) %&gt;% sf::st_transform(crs=plt_crs) , aes(color = cnstrnt_class, fill = cnstrnt_class), lwd = 1.4 , inherit.aes = F , alpha = 0 # , show.legend = F ) + scale_color_manual(values = cols_rdylbu_dk, drop = F) + labs( color = &quot;Level of\\nConstraint&quot; , subtitle = &quot;largest patch of interconnected fireshed project areas by level of mechanical constraint&quot; # largest patch of spatially adjacent... ) + theme( # plot.subtitle = element_text(size = 8) plot.subtitle = element_blank() ) + guides( color = &quot;none&quot; , fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9, linewidth = 0)) ) # return return(plt) } # largest_patch_map_fn(13) # plot each landscape plt_ptch_list &lt;- 1:length(area_nm_list) %&gt;% purrr::map(largest_patch_map_fn) # scenario_maps plt_ptch_list[] # save 1:length(plt_ptch_list) %&gt;% purrr::map(function(x){ ggplot2::ggsave( filename = paste0(&quot;../data/&quot;,&quot;plt_map_patch_fpa_&quot;,x,&quot;.png&quot;) , plot = plt_ptch_list[[x]] # ggplot2::last_plot() , width = 11 , height = 8.5 , units = &quot;in&quot; , dpi = &quot;print&quot; , bg = &quot;white&quot; ) } ) Comparison of largest patch of lightly constrained fireshed project areas versus largest patch of highly constrained fireshed project areas. Planning fewer, larger individual treatments across the landscape appears to be a better strategy when human community protection is a primary concern (Schmidt et al. 2008). Finney et al. (2007) note that the relative improvement of optimized treatment placement breaks down when larger proportions of the landscape (40–50%) are excluded from treatment because of land-management constraints. # aggregate to constraint class level cnstrnt_class_patches %&gt;% sf::st_drop_geometry() %&gt;% dplyr::group_by(area_name, scenario_lab, cnstrnt_class) %&gt;% dplyr::summarize( max_patch_area_ha = max(patch_area_ha, na.rm = T) , mean_patch_area_ha = mean(patch_area_ha, na.rm = T) , max_pct_patch_landscape = max(pct_patch_landscape, na.rm = T) , sum_pct_patch_landscape = sum(pct_patch_landscape) ) %&gt;% dplyr::ungroup() %&gt;% dplyr::mutate( max_pct_patch_landscape_hack = dplyr::case_when( cnstrnt_class==&quot;high constraint&quot; ~ -max_pct_patch_landscape , TRUE ~ max_pct_patch_landscape ) ) %&gt;% dplyr::filter( cnstrnt_class!=&quot;med. constraint&quot; ) %&gt;% # plot ggplot( mapping = aes( y = scenario_lab , x = max_pct_patch_landscape_hack , fill = cnstrnt_class , group = cnstrnt_class ) ) + # geom_line( # mapping = aes(x = forcats::fct_rev(scenario_lab), y = max_pct_patch_landscape, color = forcats::fct_rev(cnstrnt_class), group = forcats::fct_rev(cnstrnt_class)) # , linewidth = 1.2 # ) + geom_col( width = 0.7, alpha = 0.9 ) + geom_vline(xintercept = 0, color = &quot;gray55&quot;, linetype = &quot;solid&quot;, linewidth = 0.7) + geom_text( mapping = aes( label = ifelse( max_pct_patch_landscape_hack&lt;0 , scales::percent(max_pct_patch_landscape, accuracy = 1) , &quot;&quot; ) , x = max_pct_patch_landscape_hack #+ .07*sign(max_pct_patch_landscape_hack) , fontface = &quot;bold&quot; ) , color = &quot;black&quot;, size = 2.7 , hjust = +1 ) + geom_text( mapping = aes( label = ifelse( max_pct_patch_landscape_hack&gt;=0 , scales::percent(max_pct_patch_landscape, accuracy = 1) , &quot;&quot; ) , x = max_pct_patch_landscape_hack #+ .07*sign(max_pct_patch_landscape_hack) , fontface = &quot;bold&quot; ) , color = &quot;black&quot;, size = 2.7 , hjust = 0 ) + annotate( geom = &quot;text&quot; , x = -0.73 , y = 0 , label = &quot;high constraint&quot; , color = cols_rdylbu_lt[3] , fontface = &quot;bold&quot; , size = 2.5 ) + annotate( geom = &quot;text&quot; , x = 0.92 , y = 0 , label = &quot;low constraint&quot; , color = cols_rdylbu_lt[1] , fontface = &quot;bold&quot; , size = 2.5 ) + scale_fill_manual(values = cols_rdylbu_lt) + scale_x_continuous( limits = c(-1.05,1.22) , labels = scales::percent_format() # , expand = expansion(mult = c(0, 0.1)) # , breaks = scales::extended_breaks(5) ) + scale_y_discrete(expand = expansion(mult = c(0.8,0.3))) + facet_wrap( facets = vars(area_name) , ncol = 3 , labeller = label_wrap_gen(width = 35, multi_line = TRUE) , scales = &quot;free_y&quot; ) + labs( fill = &quot;Level of\\nConstraint&quot; , subtitle = &quot;&quot; # &quot;percentage of total landscape area comprised by the largest patch&quot; # &quot;Largest Patch % of Landscape Area&quot; , x = &quot;Percent of Overall Landscape Area Comprised by the Largest Patch&quot; # &quot;Largest Patch % of Landscape Area&quot; , y = &quot;&quot; ) + theme_light() + theme( legend.position = &quot;none&quot; # &quot;top&quot; , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size=7) , axis.title.x = element_text(size=10, face = &quot;bold&quot;) , axis.title.y = element_blank() , axis.text.x = element_blank() , axis.ticks.x = element_blank() , panel.grid.major = element_blank() , panel.grid.minor = element_blank() , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;, size = 9) ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9)) ) # export ggplot2::ggsave( filename = paste0(&quot;../data/plt_lrgst_patch_index.png&quot;) , plot = ggplot2::last_plot() , width = 8.5 , height = 11 , units = &quot;in&quot; , dpi = &quot;print&quot; ) 4.6 High-risk fireshed project areas Models suggest that fuels reduction treatments can effectively reduce fire size and severity when 20-40% of the landscape has been treated (e.g., Finney, 2007) and the plan (USFS, 2022a) aims to treat this amount of high-risk fireshed area within the 21 priority landscapes. The total area of the 21 priority landscapes is approximately 47 million acres (19 million ha), of which 23.7 million acres (9.6 million ha) are in high-risk firesheds; an objective of treating 20-40% would indicate the need to treat between 4.7 to 9.5 million acres (1.9 to 3.8 million ha). 4.6.1 Project Areas by WCS Status # aggregate data by area, status wcs_status_temp &lt;- constrained_by_scnro_ls_pa %&gt;% dplyr::filter(scenario_id==1) %&gt;% dplyr::group_by(area_name,fireshed_crisis_strategy) %&gt;% dplyr::summarise( n = n() , feature_area_ha = sum(feature_area_ha) ) %&gt;% dplyr::group_by(area_name) %&gt;% dplyr::mutate( tot_n = sum(n) , tot_area = sum(feature_area_ha) , pct_n = n/tot_n , pct_area = feature_area_ha/tot_area ) %&gt;% dplyr::ungroup() # plot ggplot(data = wcs_status_temp) + geom_col( mapping = aes(y = reorder(area_name,tot_n), x = n, fill = fireshed_crisis_strategy) , color = NA, width = 0.7 ) + geom_text( mapping = aes( y = area_name, x = n, group = fireshed_crisis_strategy , label = scales::comma(ifelse(n&gt;20,n,NA), accuracy = 1) , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 3 ) + geom_text( data = constrained_by_scnro_ls_pa %&gt;% dplyr::filter(scenario_id==1) %&gt;% dplyr::group_by(area_name) %&gt;% dplyr::summarise( n = n() , feature_area_ha = sum(feature_area_ha) ) , mapping = aes( y = reorder(area_name,n), x = n , label = scales::comma(n, accuracy = 1) ) , color = &quot;black&quot;, size = 3.5 , hjust = -0.1 ) + scale_fill_manual(values = c(&quot;All-Lands&quot;=&quot;firebrick&quot;,&quot;USFS-Only&quot;=&quot;orange3&quot;,&quot;Not High Risk&quot;=&quot;gray&quot;)) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)),labels = scales::comma_format()) + labs( fill = &quot;High-Risk\\nStatus&quot; , y = &quot;&quot; , x = &quot;# of Fireshed\\nProject Areas&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) ) 4.6.2 Area of high-risk project areas Only including fireshed project areas that have at least 25% of their area within the bounds of the priority landscapes and are in a high-risk fireshed. See this section for discussion of high-risk firesheds and criteria for including fireshed project areas. # data filter wcs_status_temp %&gt;% dplyr::filter(fireshed_crisis_strategy!=&quot;Not High Risk&quot;) %&gt;% dplyr::group_by(area_name) %&gt;% dplyr::mutate(tot_area = sum(feature_area_ha)) %&gt;% # plot ggplot() + geom_col( mapping = aes(y = reorder(area_name,tot_area), x = feature_area_ha, fill = fireshed_crisis_strategy) , color = NA, width = 0.7 ) + geom_text( mapping = aes( y = area_name, x = feature_area_ha, group = fireshed_crisis_strategy , label = ifelse( feature_area_ha&lt;150000 ,NA ,scales::comma(feature_area_ha,suffix = &quot;k&quot;, scale = 1e-3, accuracy = 1) ) , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 3 ) + geom_text( data = constrained_by_scnro_ls_pa %&gt;% dplyr::filter( scenario_id==1 &amp; fireshed_crisis_strategy!=&quot;Not High Risk&quot; ) %&gt;% dplyr::group_by(area_name) %&gt;% dplyr::summarise( n = n() , feature_area_ha = sum(feature_area_ha) ) , mapping = aes( y = reorder(area_name,feature_area_ha), x = feature_area_ha , label = scales::comma(feature_area_ha,suffix = &quot;k ha&quot;, scale = 1e-3, accuracy = 1) ) , color = &quot;black&quot;, size = 3.5 , hjust = -0.1 ) + scale_fill_manual(values = c(&quot;All-Lands&quot;=&quot;firebrick&quot;,&quot;USFS-Only&quot;=&quot;orange3&quot;,&quot;Not High Risk&quot;=&quot;gray&quot;)) + scale_x_continuous(expand = expansion(mult = c(0, 0.15)),labels = scales::comma_format(suffix = &quot;k ha&quot;, scale = 1e-3, accuracy = 1)) + labs( fill = &quot;High-Risk\\nStatus&quot; , y = &quot;&quot; , x = &quot;Area (ha) of Fireshed\\nProject Areas&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) ) 4.6.3 Reduction by Constraint See this section for reduction by constraint at the landscape-level. # aggregate by area_name, scenario for hi-risk pa&#39;s constrained_by_scnro_ls_hionly_long &lt;- constrained_by_scnro_ls_pa %&gt;% dplyr::filter(fireshed_crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;)) %&gt;% dplyr::select(scenario_id, scenario_desc, scenario_lab , state, name, area_name , (tidyselect::starts_with(&quot;rmn&quot;) &amp; tidyselect::ends_with(&quot;area_ha&quot;)) , covertype_area_ha ) %&gt;% dplyr::group_by( scenario_id, scenario_desc, scenario_lab , state, name, area_name ) %&gt;% dplyr::summarise( dplyr::across( tidyselect::ends_with(&quot;area_ha&quot;) , sum ) ) %&gt;% tidyr::pivot_longer( cols = tidyselect::starts_with(&quot;rmn&quot;) , names_to = &quot;constraint&quot; , values_to = &quot;rmn_area_ha&quot; , names_prefix = &quot;rmn&quot; , values_drop_na = F ) %&gt;% dplyr::mutate(constraint = stringr::str_remove(constraint,&quot;_area_ha&quot;)) %&gt;% tidyr::separate_wider_delim(constraint, &quot;_&quot;, names = c(&quot;constraint_lvl&quot;, &quot;constraint&quot;)) %&gt;% dplyr::mutate( constraint_lvl = as.numeric(constraint_lvl) , constraint = factor( constraint , ordered = TRUE , levels = c( &quot;protected&quot; , &quot;slope&quot; , &quot;roads&quot; , &quot;riparian&quot; , &quot;administrative&quot; ) , labels = c( &quot;Protected&quot; , &quot;Slope\\nSteepness&quot; , &quot;Road\\nDistance&quot; , &quot;Riparian\\nBuffer&quot; , &quot;Administrative&quot; ) ) %&gt;% forcats::fct_rev() , pct_rmn = rmn_area_ha/covertype_area_ha , pct_rdctn = dplyr::case_when( constraint_lvl == 1 ~ -1*(1-pct_rmn) , TRUE ~ -1*(dplyr::lag(pct_rmn)-pct_rmn) ) , pct_rdctn_total = max(-1*(1 - ifelse(constraint_lvl == 5, pct_rmn,0))) ) # plot ggplot(data = constrained_by_scnro_ls_hionly_long) + geom_col( mapping = aes(y = scenario_lab, x = pct_rdctn, fill = constraint) , color = NA, width = 0.7 , alpha = 0.7 ) + geom_text( mapping = aes( y = scenario_lab, x = pct_rdctn , label = scales::percent(ifelse(pct_rdctn&lt;.06*-1,pct_rdctn,NA), accuracy = 1) , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 3 ) + geom_text( data = constrained_by_scnro_ls_hionly_long %&gt;% dplyr::filter(constraint_lvl==5) , mapping = aes( y = scenario_lab, x = -1*(1 - pct_rmn) , label = scales::percent(-1*(1 - pct_rmn), accuracy = 1) ) , color = &quot;black&quot;, size = 3.5 , hjust = -0.1 ) + facet_wrap(facets = vars(area_name) , ncol = 3 , labeller = label_wrap_gen(width = 35, multi_line = TRUE) ) + # scale_fill_viridis_d(option = &quot;plasma&quot;) + scale_fill_manual(values = plasma_custom) + scale_x_reverse(expand = expansion(mult = c(0.02, .21)),labels = scales::percent_format()) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;Constraint Reduction in Treatable Area (%)&quot; , subtitle = &quot;High-Risk Fireshed Project Areas&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_blank() , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;, size = 10) ) The figure above shows the reduction by constraint for only high-risk fireshed project areas with at least 25% of area within the boundary of the Strategy priority landscape. 4.6.4 Reduction by Constraint high-risk vs. total # combine data and plot pct_rdctn_temp &lt;- constrained_by_scnro_ls_hionly_long %&gt;% dplyr::ungroup() %&gt;% dplyr::select(scenario_lab, area_name, pct_rdctn, constraint_lvl) %&gt;% dplyr::mutate(dta_src = &quot;High-Risk Project Areas&quot;) %&gt;% dplyr::bind_rows( constrained_by_scnro_ls_long %&gt;% dplyr::ungroup() %&gt;% dplyr::select(scenario_lab, area_name, pct_rdctn, constraint_lvl) %&gt;% dplyr::filter(!is.na(constraint_lvl)) %&gt;% dplyr::mutate(dta_src = &quot;Overall Landscape Area&quot;) ) %&gt;% dplyr::group_by(scenario_lab, area_name, dta_src) %&gt;% dplyr::mutate( pct_rdctn_total = sum(pct_rdctn) , constraint = factor( constraint_lvl , ordered = TRUE , levels = 1:5 , labels = c( &quot;Protected&quot; , &quot;Slope\\nSteepness&quot; , &quot;Road\\nDistance&quot; , &quot;Riparian\\nBuffer&quot; , &quot;Administrative&quot; ) ) %&gt;% forcats::fct_rev() , scenario_lab = scenario_lab %&gt;% forcats::fct_rev() ) # plot ggplot(data = pct_rdctn_temp) + geom_col( mapping = aes(y = dta_src, x = pct_rdctn, fill = constraint) , color = NA, width = 0.7 , alpha = 0.7 ) + geom_text( mapping = aes( y = dta_src, x = pct_rdctn , label = scales::percent(ifelse(pct_rdctn&lt;.075*-1,pct_rdctn,NA), accuracy = 1) , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 2.3 ) + geom_text( data = pct_rdctn_temp %&gt;% dplyr::filter(constraint_lvl==5) , mapping = aes( y = dta_src, x = pct_rdctn_total , label = scales::percent(pct_rdctn_total, accuracy = 1) ) , color = &quot;black&quot;, size = 3.5 , hjust = -0.1 ) + facet_grid( cols = vars(scenario_lab) , rows = vars(area_name) , labeller = label_wrap_gen(width = 35, multi_line = TRUE) , switch = &quot;y&quot; ) + # scale_fill_viridis_d(option = &quot;plasma&quot;) + scale_fill_manual(values = plasma_custom) + scale_x_reverse(expand = expansion(mult = c(0.02, .21)),labels = scales::percent_format()) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;Constraint Reduction in Treatable Area (%)&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_blank() , strip.text.x = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) , strip.text.y.left = element_text(angle = 0) , strip.placement = &quot;outside&quot; ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9)) ) 4.7 Objective vs. Treatable Models suggest that fuels reduction treatments can effectively reduce fire size and severity when 20-40% of the landscape has been treated (e.g., Finney, 2007) and the Strategy (USFS, 2022a) aims to treat this amount of high-risk fireshed area within the 21 priority landscapes. The total area of the 21 priority landscapes is approximately 47 million acres (19 million ha), of which 23.7 million acres (9.6 million ha) are in high-risk firesheds; an objective of treating 20-40% would indicate the need to treat between 4.7 to 9.5 million acres (1.9 to 3.8 million ha). Using the area of fireshed project areas that have at least 25% of their area within the bounds of the priority landscapes and are in a high-risk fireshed as the treatment area objective (20-40%). # Area of pa&#39;s by level of constraint constrained_by_scnro_ls_cnstrnt_temp &lt;- constrained_by_scnro_ls_pa %&gt;% dplyr::filter(fireshed_crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;)) %&gt;% dplyr::group_by(scenario_id,scenario_lab,state,name,area_name,cnstrnt_class) %&gt;% dplyr::summarise( n = n() , dplyr::across( c(feature_area_ha,covertype_area_ha,rmn5_administrative_area_ha) , ~ sum(.x,na.rm = T) ) ) %&gt;% dplyr::group_by(scenario_id,scenario_lab,state,name,area_name) %&gt;% dplyr::mutate( # cnstrnt_class = stringr::word(cnstrnt_class) %&gt;% stringr::str_remove_all(&quot;\\\\.&quot;) total_area_ha = sum(feature_area_ha) , total_covertype_area_ha = sum(covertype_area_ha) # &quot;the need to treat 20 to 40 percent of the overall fireshed&quot; , pct_treatable = rmn5_administrative_area_ha/total_area_ha , objective_lo_treat_area_ha = total_area_ha*.2 , objective_hi_treat_area_ha = total_area_ha*.4 ) %&gt;% dplyr::ungroup() %&gt;% dplyr::arrange(state,name,scenario_id,cnstrnt_class) 4.7.1 Objective vs. Treatable Table table_temp &lt;- constrained_by_scnro_ls_cnstrnt_temp %&gt;% dplyr::mutate( cnstrnt_class = stringr::word(cnstrnt_class) %&gt;% stringr::str_remove_all(&quot;\\\\.&quot;) ) %&gt;% dplyr::rename( remaining_pct=pct_treatable , remaining_ha=rmn5_administrative_area_ha ) %&gt;% dplyr::select(-c(feature_area_ha, covertype_area_ha)) %&gt;% tidyr::pivot_wider( names_from = cnstrnt_class , values_from = c(n, remaining_pct, remaining_ha) , names_glue = &quot;{cnstrnt_class}_{.value}&quot; , values_fill = 0 ) %&gt;% dplyr::mutate( tot_remaining_ha = low_remaining_ha+med_remaining_ha ,tot_remaining_pct = low_remaining_pct+med_remaining_pct ) %&gt;% dplyr::relocate(tot_remaining_ha,.after = med_remaining_ha) %&gt;% dplyr::inner_join( wf_landscapes %&gt;% sf::st_drop_geometry() %&gt;% dplyr::select(area_name,hectares) %&gt;% dplyr::rename(landscape_area_ha=hectares) , by = dplyr::join_by(area_name) ) # make table kableExtra::kable( table_temp %&gt;% dplyr::select( c( scenario_lab # , landscape_area_ha , total_area_ha , total_covertype_area_ha # light and mod area , low_remaining_ha, med_remaining_ha, tot_remaining_ha , low_remaining_pct, med_remaining_pct, tot_remaining_pct ) ) %&gt;% dplyr::mutate( dplyr::across( tidyselect::ends_with(&quot;_ha&quot;) , ~ scales::comma(.x, suffix = &quot;k&quot;, scale = 1e-3, accuracy = 1) ) , dplyr::across( tidyselect::ends_with(&quot;_pct&quot;) , ~ scales::percent(.x, accuracy = .1) ) ) , caption = &quot;Wildfire Crisis Strategy High-Risk Fireshed Project Areas&lt;br&gt;mechanically available for treatment in lightly and moderately constrained project areas (≥25% in landscape)&quot; , col.names = c( &quot;&quot; # , &quot;Total\\nLandscape&quot; , &quot;Total Area (ha)&quot; , &quot;Forest+Shrub Area (ha)&quot; , &quot;Lightly Constrained&quot;, &quot;Moderately Constrained&quot; , &quot;Total&quot; , &quot;Lightly Constrained&quot;, &quot;Moderately Constrained&quot; , &quot;Total&quot; ) , escape = F ) %&gt;% add_header_above(c(&quot; &quot; = 1, &quot;High-Risk Fireshed\\nProject Areas&quot; = 2, &quot;Treatable High-Risk\\nArea (ha)&quot;=3, &quot;Treatable High-Risk\\nPercent (%)&quot; = 3)) %&gt;% kable_classic(full_width=T) %&gt;% pack_rows(index = table(forcats::fct_inorder(table_temp$area_name))) %&gt;% kableExtra::kable_styling(font_size = 11,fixed_thead = TRUE) %&gt;% kableExtra::column_spec( 9 # 10 , color = &quot;white&quot; , background = table_temp %&gt;% dplyr::mutate( is_gt20 = dplyr::case_when( low_remaining_pct &gt;= .2 ~ &quot;#008b8b&quot; , tot_remaining_pct &gt;= .2 ~ &quot;#545454&quot; , TRUE ~ &quot;#cd3700&quot; ) ) %&gt;% dplyr::pull(is_gt20) ) %&gt;% kableExtra::scroll_box(width = &quot;740px&quot;) Table 4.3: Wildfire Crisis Strategy High-Risk Fireshed Project Areasmechanically available for treatment in lightly and moderately constrained project areas (≥25% in landscape) High-Risk FireshedProject Areas Treatable High-RiskArea (ha) Treatable High-RiskPercent (%) Total Area (ha) Forest+Shrub Area (ha) Lightly Constrained Moderately Constrained Total Lightly Constrained Moderately Constrained Total AZ: 4FRI Scenario 1 1,579k 1,436k 304k 126k 430k 19.3% 8.0% 27.2% Scenario 2 1,579k 1,436k 535k 69k 605k 33.9% 4.4% 38.3% Scenario 3 1,579k 1,436k 913k 50k 963k 57.8% 3.2% 61.0% AZ: Prescott Scenario 1 221k 191k 24k 20k 44k 10.7% 9.1% 19.8% Scenario 2 221k 191k 62k 19k 81k 28.0% 8.8% 36.7% Scenario 3 221k 191k 101k 11k 112k 45.8% 5.1% 50.9% AZ: San Carlos Apache Tribal Forest Protection Scenario 1 250k 230k 4k 15k 19k 1.6% 6.1% 7.7% Scenario 2 250k 230k 28k 50k 78k 11.3% 19.9% 31.2% Scenario 3 250k 230k 69k 31k 100k 27.6% 12.2% 39.8% CA: North Yuba Scenario 1 206k 197k 21k 36k 57k 10.4% 17.3% 27.6% Scenario 2 206k 197k 75k 13k 88k 36.5% 6.5% 43.0% Scenario 3 206k 197k 99k 12k 111k 48.4% 5.7% 54.1% CA: Plumas Community Protection Scenario 1 157k 148k 12k 34k 46k 7.8% 21.7% 29.5% Scenario 2 157k 148k 65k 8k 72k 41.2% 4.9% 46.1% Scenario 3 157k 148k 91k 0k 91k 57.9% 0.0% 57.9% CA: Southern California Fireshed Risk Reduction Strategy Scenario 1 1,053k 854k 13k 92k 105k 1.3% 8.7% 10.0% Scenario 2 1,053k 854k 162k 87k 249k 15.3% 8.3% 23.7% Scenario 3 1,053k 854k 241k 71k 311k 22.8% 6.7% 29.6% CA: Stanislaus Scenario 1 153k 143k 20k 30k 50k 13.1% 19.8% 32.8% Scenario 2 153k 143k 59k 10k 70k 38.8% 6.7% 45.5% Scenario 3 153k 143k 80k 4k 84k 52.4% 2.5% 54.9% CA: Trinity Forest Health and Fire-Resilient Rural Communities Scenario 1 394k 336k 0k 24k 24k 0.0% 6.1% 6.1% Scenario 2 394k 336k 21k 38k 59k 5.4% 9.6% 15.0% Scenario 3 394k 336k 125k 33k 158k 31.7% 8.5% 40.2% CO: Colorado Front Range Scenario 1 1,138k 823k 85k 118k 203k 7.5% 10.4% 17.8% Scenario 2 1,138k 823k 286k 65k 351k 25.1% 5.7% 30.8% Scenario 3 1,138k 823k 374k 62k 436k 32.9% 5.4% 38.3% ID: Nez Perce-Clearwater-Lower Salmon Scenario 1 520k 444k 77k 49k 126k 14.8% 9.5% 24.2% Scenario 2 520k 444k 199k 13k 212k 38.3% 2.5% 40.8% Scenario 3 520k 444k 205k 14k 218k 39.4% 2.6% 42.0% ID: Southwest Idaho Scenario 1 734k 632k 228k 41k 268k 31.0% 5.5% 36.5% Scenario 2 734k 632k 408k 15k 423k 55.6% 2.1% 57.6% Scenario 3 734k 632k 427k 8k 435k 58.1% 1.1% 59.2% MT: Kootenai Complex Scenario 1 322k 294k 98k 12k 111k 30.6% 3.9% 34.4% Scenario 2 322k 294k 140k 9k 149k 43.5% 2.9% 46.4% Scenario 3 322k 294k 190k 9k 199k 59.1% 2.7% 61.8% NV: Sierra and Elko Fronts Scenario 1 678k 453k 99k 55k 154k 14.6% 8.2% 22.8% Scenario 2 678k 453k 229k 17k 247k 33.8% 2.6% 36.4% Scenario 3 678k 453k 250k 20k 270k 36.9% 2.9% 39.9% NM: Enchanted Circle Scenario 1 318k 285k 33k 42k 75k 10.4% 13.1% 23.5% Scenario 2 318k 285k 118k 16k 134k 37.1% 4.9% 42.0% Scenario 3 318k 285k 133k 13k 146k 41.9% 4.0% 45.9% OR: Central Oregon Scenario 1 278k 232k 138k 10k 149k 49.7% 3.6% 53.4% Scenario 2 278k 232k 169k 0k 169k 60.5% 0.0% 60.5% Scenario 3 278k 232k 203k 0k 203k 73.1% 0.0% 73.1% OR: Klamath River Basin Scenario 1 971k 808k 17k 59k 76k 1.7% 6.0% 7.8% Scenario 2 971k 808k 173k 55k 229k 17.8% 5.7% 23.5% Scenario 3 971k 808k 302k 59k 360k 31.1% 6.0% 37.1% OR: Mount Hood Forest Health and Fire-Resilient Communities Scenario 1 339k 244k 15k 22k 37k 4.5% 6.5% 11.0% Scenario 2 339k 244k 46k 21k 67k 13.6% 6.3% 19.9% Scenario 3 339k 244k 131k 10k 141k 38.6% 2.8% 41.5% UT: Pine Valley Scenario 1 187k 173k 7k 32k 39k 3.9% 16.9% 20.8% Scenario 2 187k 173k 36k 24k 60k 19.1% 13.1% 32.2% Scenario 3 187k 173k 45k 19k 64k 24.0% 10.3% 34.4% UT: Wasatch Scenario 1 156k 126k 21k 11k 32k 13.6% 7.1% 20.7% Scenario 2 156k 126k 45k 8k 52k 28.6% 5.0% 33.7% Scenario 3 156k 126k 47k 8k 56k 30.4% 5.3% 35.7% WA: Central Washington Initiative Scenario 1 818k 588k 10k 31k 41k 1.2% 3.8% 5.0% Scenario 2 818k 588k 66k 41k 106k 8.0% 5.0% 13.0% Scenario 3 818k 588k 242k 43k 285k 29.6% 5.2% 34.8% WA: Colville Northeast Washington Vision Scenario 1 272k 244k 55k 28k 83k 20.4% 10.2% 30.6% Scenario 2 272k 244k 118k 10k 128k 43.3% 3.6% 46.9% Scenario 3 272k 244k 149k 6k 155k 54.7% 2.2% 56.9% 4.7.2 Reduction in treatable area flow table_temp %&gt;% dplyr::filter(scenario_id==1) %&gt;% dplyr::select( c( area_name , landscape_area_ha , total_area_ha , total_covertype_area_ha # , tot_remaining_ha # , low_remaining_ha ) ) %&gt;% tidyr::pivot_longer( !area_name , names_to = &quot;name&quot; , values_to = &quot;hectares&quot; ) %&gt;% dplyr::group_by(area_name) %&gt;% dplyr::mutate(order = dplyr::row_number(),y_val=2) %&gt;% dplyr::ungroup() %&gt;% dplyr::cross_join(data.frame(scenario_id = 1:3)) %&gt;% #### dplyr::bind_rows( table_temp %&gt;% dplyr::select( c( area_name , scenario_id , tot_remaining_ha , low_remaining_ha ) ) %&gt;% tidyr::pivot_longer( !c(area_name,scenario_id) , names_to = &quot;name&quot; , values_to = &quot;hectares&quot; ) %&gt;% dplyr::group_by(area_name,scenario_id) %&gt;% dplyr::mutate( order = dplyr::row_number()+3 , y_val = scenario_id ) %&gt;% dplyr::ungroup() %&gt;% dplyr::relocate(scenario_id,.after = dplyr::last_col()) ) %&gt;% dplyr::arrange(area_name,order,y_val ) %&gt;% dplyr::mutate( order_lab = factor( order , levels = 1:5 , labels = c( &quot;Total\\nLandscape&quot; , &quot;High-risk\\nFireshed PAs&quot; , &quot;High-risk\\nForest+Shrub&quot; , &quot;Lt.+Md. Constrained&quot; , &quot;Lightly Constrained&quot; ) , ordered = T ) ) %&gt;% dplyr::inner_join( wf_landscapes %&gt;% sf::st_drop_geometry() %&gt;% dplyr::select(area_name, hectares) %&gt;% dplyr::rename(tot_hectares=hectares) , by = dplyr::join_by(area_name) ) %&gt;% dplyr::inner_join( table_temp %&gt;% dplyr::filter(scenario_id==1) %&gt;% dplyr::select(area_name, objective_lo_treat_area_ha) , by = dplyr::join_by(area_name) ) %&gt;% dplyr::mutate( y_val = -y_val , sizing = ifelse(hectares&gt;tot_hectares,1,hectares/tot_hectares) , coloring = dplyr::case_when( order %in% 4:5 &amp; hectares &gt;= objective_lo_treat_area_ha ~ 1 , order %in% 4:5 &amp; hectares &lt; objective_lo_treat_area_ha ~ 2 , T ~ 3 ) ) %&gt;% # dplyr::filter(stringr::str_starts(area_name,&quot;CA&quot;)) %&gt;% # View() ggplot() + geom_line( mapping = aes(x = order_lab, y = y_val, group = scenario_id) , color = &quot;gray&quot; ) + geom_point( mapping = aes(x = order_lab, y = y_val, size = sizing*100, color = factor(coloring)) , shape = 15 ) + geom_text( mapping = aes( x = order_lab, y = y_val, group = scenario_id , label = scales::comma(hectares,suffix = &quot;k&quot;, scale = 1e-3, accuracy = 1) ) , size = 2.5 , color = &quot;black&quot; , vjust = 2.5 , angle = 90 ) + geom_text( mapping = aes( x = order_lab, y = y_val, group = scenario_id , label = ifelse( order == 4, paste0(&quot;Scenario&quot;, y_val*-1), NA ) , fontface = &quot;italic&quot; ) , size = 2.5 , color = &quot;black&quot; , hjust = 0.1 , vjust = -1.4 ) + facet_wrap(facets = vars(area_name) , ncol = 3 , labeller = label_wrap_gen(width = 35, multi_line = TRUE) , scales = &quot;free_x&quot; ) + scale_color_manual(values = c(&quot;#008b8b&quot;, &quot;#cd3700&quot;, &quot;#bebebe&quot;)) + scale_y_continuous(expand = expansion(c(0.3,0.3))) + scale_x_discrete(labels = scales::label_wrap(10)) + labs( x = &quot;&quot; , y = &quot;&quot; , subtitle = &quot;&lt;span&gt;&lt;span style=&#39;color:#008b8b;&#39;&gt;&lt;b&gt;&lt;i&gt;≥20% treatable&lt;/i&gt;&lt;/b&gt;&lt;/span&gt; | &lt;span style=&#39;color:#cd3700;&#39;&gt;&lt;b&gt;&lt;i&gt;&lt;20% treatable&lt;/i&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&quot; ) + theme_light() + theme( legend.position = &quot;none&quot; , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.y = element_blank() , axis.ticks.y = element_blank() , axis.text = element_text(size = 7) , panel.grid = element_blank() , plot.subtitle = ggtext::element_markdown(size = 10) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;, size = 10) ) 4.7.3 Objective vs. Treatable Plot obj_trtbl_temp &lt;- constrained_by_scnro_ls_cnstrnt_temp %&gt;% dplyr::filter(cnstrnt_class!=&quot;high constraint&quot;) %&gt;% dplyr::left_join( # aggregate by area_name, scenario_lab constrained_by_scnro_ls_cnstrnt_temp %&gt;% dplyr::filter(cnstrnt_class!=&quot;high constraint&quot;) %&gt;% dplyr::group_by(area_name, scenario_id) %&gt;% dplyr::mutate(low=ifelse(cnstrnt_class==&quot;low constraint&quot;,pct_treatable,0)) %&gt;% dplyr::summarise( pct_treatable_lowmed = sum(pct_treatable) , pct_treatable_low = sum(low) ) %&gt;% dplyr::mutate( treatment_objective = dplyr::case_when( pct_treatable_low &gt;= .2 ~ 1 , pct_treatable_lowmed &gt;= .2 ~ 2 , TRUE ~ 3 ) %&gt;% factor( levels = 1:3 , labels = c(&quot;mechanical alone&quot;,&quot;mechanical+fire&quot;,&quot;fire&quot;) , ordered = T ) ) %&gt;% dplyr::group_by(scenario_id) %&gt;% dplyr::arrange(scenario_id, treatment_objective , desc(pct_treatable_low), desc(pct_treatable_lowmed) ) %&gt;% dplyr::mutate(sorting_rank = dplyr::row_number()) %&gt;% dplyr::ungroup() , by = dplyr::join_by(area_name, scenario_id) ) %&gt;% dplyr::ungroup() %&gt;% dplyr::mutate( dplyr::across( c(cnstrnt_class, scenario_lab) , ~ forcats::fct_rev(.x) ) ) # plot obj_plt_fn &lt;- function(scnum){ plt &lt;- ggplot( data = obj_trtbl_temp %&gt;% dplyr::filter(scenario_id==scnum) , mapping = aes( x = pct_treatable , y = reorder(area_name, desc(sorting_rank)) ) ) + geom_rect(mapping = aes(xmin = 0.2, xmax=0.4, ymin = -Inf, ymax = Inf) , fill = &quot;gray77&quot; , alpha = 0.6 ) + annotate(&quot;text&quot; , x = 0.46 , y = obj_trtbl_temp %&gt;% dplyr::filter(scenario_id == scnum &amp; sorting_rank==max(obj_trtbl_temp$sorting_rank)) %&gt;% dplyr::pull(area_name) %&gt;% unique() , label = expression(bold(&quot;objective&quot;)~bold(&quot;20-40%&quot;)) , size = 3, color = &quot;gray65&quot;, parse = T ) + geom_col( mapping = aes(fill = cnstrnt_class) , color = NA, width = 0.7 ) + geom_text( mapping = aes( group = cnstrnt_class , label = scales::percent( ifelse(pct_treatable&lt;.06,NA,pct_treatable) , accuracy = 1 ) # , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 2.2 ) + # total geom_text( data = obj_trtbl_temp %&gt;% dplyr::filter(scenario_id==scnum) %&gt;% dplyr::group_by(area_name, scenario_id) %&gt;% dplyr::filter(dplyr::row_number()==1) %&gt;% dplyr::ungroup() , mapping = aes( x = pct_treatable_lowmed , y = reorder(area_name, desc(sorting_rank)) , label = scales::percent(pct_treatable_lowmed, accuracy = 1) , color = treatment_objective , fontface = &quot;bold&quot; ) , size = 3.5 , hjust = -0.1 , show.legend = F ) + # facet_grid( # rows = vars(scenario_lab) # , labeller = label_wrap_gen(width = 35, multi_line = TRUE) # , scales = &quot;free_y&quot; # # , switch = &quot;y&quot; # ) + scale_fill_manual(values = RColorBrewer::brewer.pal(n=3,name=&quot;RdYlBu&quot;)[2:3]) + scale_color_manual(values = c( &quot;mechanical alone&quot;=&quot;darkcyan&quot; ,&quot;mechanical+fire&quot;=&quot;gray33&quot; , &quot;fire&quot;=&quot;orangered3&quot;) ) + # scale_x_continuous(expand = expansion(mult = c(0, .15)),labels = scales::percent_format()) + scale_x_continuous(limits = c(0, .78),labels = scales::percent_format(),position = &quot;top&quot;) + labs( fill = &quot;Level of\\nConstraint&quot; , y = &quot;&quot; , x = &quot;Percent of Total High-Risk Area&quot; , subtitle = obj_trtbl_temp %&gt;% dplyr::filter(scenario_id==scnum) %&gt;% dplyr::pull(scenario_lab) %&gt;% unique() ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size=7) , axis.title.x = element_text(size=9, face = &quot;bold&quot;) , axis.text.x = element_blank() , axis.ticks.x = element_blank() , axis.text = element_text(size = 8) , panel.grid.major.x = element_blank() , panel.grid.minor.x = element_blank() , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;, size = 10) , strip.background = element_rect(fill = &quot;gray88&quot;) # , strip.placement = &quot;outside&quot; , plot.margin = margin(0, 0, 0, 0, &quot;cm&quot;) , plot.subtitle = element_text(vjust = -4,face=&quot;bold&quot;) ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9)) ) return(plt) } cowplot::plot_grid( obj_plt_fn(1) + theme( legend.position = c(0.86,0.82) , legend.direction = &quot;vertical&quot; ) , obj_plt_fn(2) + theme(legend.position = &quot;none&quot;) , obj_plt_fn(3) + # scale_x_continuous(position = &quot;top&quot;) + # labs(x = &quot;Percent of Total High-Risk Area&quot;) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0.1, 0, &quot;cm&quot;)) , ncol = 1 , align = &#39;vh&#39; ) # export ggplot2::ggsave( filename = paste0(&quot;../data/plt_obj_sc.png&quot;) , plot = ggplot2::last_plot() , width = 11 , height = 8.5 , units = &quot;in&quot; , dpi = &quot;print&quot; ) 4.8 Totals ################## # Data Prep ################## # union landscape and pa level data # aggregate by scenario for hi-risk pa&#39;s pct_rdctn_pas_temp &lt;- constrained_by_scnro_ls_pa %&gt;% dplyr::group_by(pa_id,scenario_id) %&gt;% dplyr::filter(dplyr::row_number()==1) %&gt;% dplyr::ungroup() %&gt;% dplyr::filter(fireshed_crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;)) %&gt;% dplyr::select(scenario_id, scenario_desc, scenario_lab , state, name, area_name , (tidyselect::starts_with(&quot;rmn&quot;) &amp; tidyselect::ends_with(&quot;area_ha&quot;)) , covertype_area_ha, feature_area_ha ) %&gt;% dplyr::group_by(scenario_id, scenario_desc, scenario_lab) %&gt;% dplyr::summarise( dplyr::across( tidyselect::ends_with(&quot;area_ha&quot;) , sum ) ) %&gt;% tidyr::pivot_longer( cols = tidyselect::starts_with(&quot;rmn&quot;) , names_to = &quot;constraint&quot; , values_to = &quot;rmn_area_ha&quot; , names_prefix = &quot;rmn&quot; , values_drop_na = F ) %&gt;% dplyr::mutate(constraint = stringr::str_remove(constraint,&quot;_area_ha&quot;)) %&gt;% tidyr::separate_wider_delim(constraint, &quot;_&quot;, names = c(&quot;constraint_lvl&quot;, &quot;constraint&quot;)) %&gt;% dplyr::mutate( constraint_lvl = as.numeric(constraint_lvl) , pct_rmn = rmn_area_ha/covertype_area_ha , pct_rdctn = dplyr::case_when( constraint_lvl == 1 ~ -1*(1-pct_rmn) , TRUE ~ -1*(dplyr::lag(pct_rmn)-pct_rmn) ) , pct_rdctn_total = max(-1*(1 - ifelse(constraint_lvl == 5, pct_rmn,0))) ) %&gt;% dplyr::ungroup() # overall pct_rdctn_ls_temp &lt;- constrained_by_scnro_ls %&gt;% dplyr::select(scenario_id, scenario_desc, scenario_lab , state, name, area_name , (tidyselect::starts_with(&quot;rmn&quot;) &amp; tidyselect::ends_with(&quot;area_ha&quot;)) , covertype_area_ha, feature_area_ha ) %&gt;% dplyr::group_by(scenario_id, scenario_desc, scenario_lab) %&gt;% dplyr::summarise( dplyr::across( tidyselect::ends_with(&quot;area_ha&quot;) , sum ) ) %&gt;% tidyr::pivot_longer( cols = tidyselect::starts_with(&quot;rmn&quot;) , names_to = &quot;constraint&quot; , values_to = &quot;rmn_area_ha&quot; , names_prefix = &quot;rmn&quot; , values_drop_na = F ) %&gt;% dplyr::mutate(constraint = stringr::str_remove(constraint,&quot;_area_ha&quot;)) %&gt;% tidyr::separate_wider_delim(constraint, &quot;_&quot;, names = c(&quot;constraint_lvl&quot;, &quot;constraint&quot;)) %&gt;% dplyr::mutate( constraint_lvl = as.numeric(constraint_lvl) , pct_rmn = rmn_area_ha/covertype_area_ha , pct_rdctn = dplyr::case_when( constraint_lvl == 1 ~ -1*(1-pct_rmn) , TRUE ~ -1*(dplyr::lag(pct_rmn)-pct_rmn) ) , pct_rdctn_total = max(-1*(1 - ifelse(constraint_lvl == 5, pct_rmn,0))) ) %&gt;% dplyr::ungroup() # combine pct_rdctn_all_temp &lt;- pct_rdctn_pas_temp %&gt;% dplyr::mutate(dta_src = &quot;High-Risk Project Areas&quot;) %&gt;% dplyr::bind_rows( pct_rdctn_ls_temp %&gt;% dplyr::mutate(dta_src = &quot;Overall Landscape Area&quot;) ) %&gt;% dplyr::mutate( constraint_lab = factor( constraint_lvl , ordered = TRUE , 1:5 , labels = c( &quot;Protected&quot; , &quot;Slope\\nSteepness&quot; , &quot;Road\\nDistance&quot; , &quot;Riparian\\nBuffer&quot; , &quot;Administrative&quot; ) ) %&gt;% forcats::fct_rev() ) %&gt;% dplyr::relocate(dta_src) 4.8.1 Reduction Treatable Area Table tot_table_temp &lt;- pct_rdctn_all_temp %&gt;% dplyr::mutate(constraint_nm = paste0(constraint_lvl,constraint)) %&gt;% dplyr::select(-c(constraint_lvl,constraint,constraint_lab)) %&gt;% tidyr::pivot_wider( names_from = constraint_nm , values_from = c(rmn_area_ha, pct_rmn, pct_rdctn) ) %&gt;% dplyr::mutate( pct_covertype_area = covertype_area_ha/feature_area_ha ) %&gt;% dplyr::mutate( dplyr::across( tidyselect::contains(&quot;area_ha&quot;) , ~ scales::comma(.x,suffix = &quot; M&quot;, scale = 1e-6, accuracy = 0.1) ) , dplyr::across( tidyselect::starts_with(&quot;pct_&quot;) , ~ scales::percent(.x, accuracy = 0.1) ) ) %&gt;% dplyr::arrange( desc(dta_src) , scenario_id ) # make table kableExtra::kable( tot_table_temp %&gt;% dplyr::select( scenario_lab , covertype_area_ha , pct_covertype_area , pct_rdctn_1protected , pct_rdctn_2slope , pct_rdctn_3roads , pct_rdctn_4riparian , pct_rdctn_5administrative , rmn_area_ha_5administrative , pct_rmn_5administrative ) , caption = paste0(&quot;&lt;b&gt;Wildfire Crisis Strategy Priority Landscapes and High-Risk Fireshed Project Areas&lt;/b&gt;&lt;br&gt;percent reduction of different types of constraints on mechanical treatment&quot;) , col.names = c( &quot;&quot; , &quot;Forest+Shrub\\n(ha)&quot;, &quot;Forest+Shrub\\n%&quot; , &quot;Protected&quot; , &quot;Slope\\nSteepness&quot; , &quot;Road\\nDistance&quot; , &quot;Riparian\\nBuffer&quot; , &quot;Administrative&quot; , &quot;Remaining (ha)&quot; , &quot;Remaining (%)&quot; ) , escape = F ) %&gt;% add_header_above(c(&quot; &quot; = 1, &quot;Strategy Priority\\nArea&quot;=2, &quot;Constraints on\\nMechanical Treatment&quot; = 5, &quot; &quot; = 2)) %&gt;% kable_classic(full_width=T) %&gt;% pack_rows(index = table(forcats::fct_inorder(tot_table_temp$dta_src))) %&gt;% kableExtra::kable_styling(font_size = 11,fixed_thead = TRUE) %&gt;% kableExtra::scroll_box(width = &quot;740px&quot;) Table 4.4: Wildfire Crisis Strategy Priority Landscapes and High-Risk Fireshed Project Areaspercent reduction of different types of constraints on mechanical treatment Strategy PriorityArea Constraints onMechanical Treatment Forest+Shrub (ha) Forest+Shrub % Protected Slope Steepness Road Distance Riparian Buffer Administrative Remaining (ha) Remaining (%) Overall Landscape Area Scenario 1 15.8 M 83.1% -21.9% -16.9% -19.9% -7.0% -5.5% 4.6 M 28.9% Scenario 2 15.8 M 83.1% -21.9% -5.2% -12.1% -10.5% -8.2% 6.7 M 42.2% Scenario 3 15.8 M 83.1% -21.9% -5.2% -12.1% -7.5% 0.0% 8.4 M 53.4% High-Risk Project Areas Scenario 1 8.7 M 82.5% -17.5% -21.1% -18.2% -8.5% -6.3% 2.5 M 28.5% Scenario 2 8.7 M 82.5% -17.5% -6.4% -10.5% -12.9% -9.4% 3.7 M 43.2% Scenario 3 8.7 M 82.5% -17.5% -6.4% -10.5% -9.3% 0.0% 4.9 M 56.3% 4.8.2 Reduction by Constraint # plot # plot ggplot(data = pct_rdctn_all_temp) + geom_col( mapping = aes(y = scenario_lab, x = pct_rdctn, fill = constraint_lab) , color = NA, width = 0.6 , alpha = 0.7 ) + geom_text( mapping = aes( y = scenario_lab, x = pct_rdctn , label = scales::percent(ifelse(pct_rdctn&lt;.06*-1,pct_rdctn,NA), accuracy = 1) , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 3 ) + geom_text( data = pct_rdctn_all_temp %&gt;% dplyr::filter(constraint_lvl==5) , mapping = aes( y = scenario_lab, x = pct_rdctn_total , label = scales::percent(pct_rdctn_total, accuracy = 1) ) , color = &quot;black&quot;, size = 3.5 , hjust = -0.1 ) + facet_grid( cols = vars(dta_src %&gt;% forcats::fct_rev()) , labeller = label_wrap_gen(width = 35, multi_line = TRUE) ) + # scale_fill_viridis_d(option = &quot;plasma&quot;) + scale_fill_manual(values = plasma_custom) + scale_x_reverse(expand = expansion(mult = c(0, .12)),labels = scales::percent_format()) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;Constraint Reduction in Treatable Area (%)&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_blank() , strip.text.x = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) , strip.placement = &quot;outside&quot; ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9)) ) 4.8.3 Distribution of Fireshed PA Constraint cnstrnt_dta_temp &lt;- constrained_by_scnro_ls_pa %&gt;% dplyr::group_by(pa_id,scenario_id) %&gt;% dplyr::filter(dplyr::row_number()==1) %&gt;% dplyr::ungroup() %&gt;% dplyr::filter(fireshed_crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;)) %&gt;% dplyr::count(scenario_id, scenario_desc, scenario_lab, cnstrnt_class) %&gt;% dplyr::group_by(scenario_desc, scenario_lab) %&gt;% dplyr::mutate( pct = n/sum(n) , dta_src = &quot;High-Risk Firesheds&quot; ) %&gt;% dplyr::bind_rows( constrained_by_scnro_ls_pa %&gt;% dplyr::group_by(pa_id,scenario_id) %&gt;% dplyr::filter(dplyr::row_number()==1) %&gt;% dplyr::ungroup() %&gt;% dplyr::count(scenario_id, scenario_desc, scenario_lab, cnstrnt_class) %&gt;% dplyr::group_by(scenario_desc, scenario_lab) %&gt;% dplyr::mutate( pct = n/sum(n) , dta_src = &quot;Overall Landscape Area&quot; ) ) %&gt;% dplyr::mutate( dta_src = dta_src %&gt;% forcats::fct_rev() ) # n for notation nlab_temp &lt;- cnstrnt_dta_temp %&gt;% dplyr::filter(scenario_id==1) %&gt;% dplyr::group_by(dta_src) %&gt;% dplyr::summarise(n = sum(n)) %&gt;% dplyr::mutate(l = paste0(dta_src, &quot; n = &quot;, scales::comma(n))) %&gt;% dplyr::pull(l) %&gt;% paste(collapse = &quot;\\n&quot;) # plot base plt_fshed_cnstrnt_lvl_temp &lt;- ggplot(data=cnstrnt_dta_temp) + geom_col( mapping = aes(x = pct, y = scenario_lab, fill=cnstrnt_class) ,width = 0.7, alpha=0.8 ) + scale_fill_brewer(type = &quot;div&quot;, palette = &quot;RdYlBu&quot;, direction = -1) + facet_grid(cols = vars(dta_src)) + scale_x_continuous(labels = scales::percent_format()) + labs( fill = &quot;Level of\\nConstraint&quot; , y = &quot;&quot; , x = &quot;% of Fireshed\\nProject Areas&quot; # , caption = nlab_temp ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) , plot.caption = element_text(size = 8) ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9)) ) # plot with large labels plt_fshed_cnstrnt_lvl_temp + geom_text( mapping = aes(x = pct, y = scenario_lab, group=cnstrnt_class ,label = scales::percent(ifelse(pct&gt;=0.065,pct,NA), accuracy = 1) , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 4 # 2.8 ) + geom_text( mapping = aes(x = pct, y = scenario_lab, group=cnstrnt_class ,label = ifelse(pct&gt;=0.065, paste0(&quot;n=&quot; ,scales::comma(n, accuracy = 1) ) , NA) ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 2.5 # 2.8 , vjust = 2.3 ) # export ggplot2::ggsave( filename = paste0(&quot;../data/plt_prjareas_dist_sc.png&quot;) , plot = ggplot2::last_plot() , width = 11 , height = 8.5 , units = &quot;in&quot; , dpi = &quot;print&quot; ) 4.8.3.1 Combine map and fireshed plot # plot small for inset inset_temp &lt;- plt_fshed_cnstrnt_lvl_temp + geom_text( mapping = aes(x = pct, y = scenario_lab, group=cnstrnt_class ,label = scales::percent(ifelse(pct&gt;=0.105,pct,NA), accuracy = 1) , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 3.2 # 2.8 ) + geom_text( mapping = aes(x = pct, y = scenario_lab, group=cnstrnt_class ,label = ifelse(pct&gt;=0.105, paste0(&quot;n=&quot; ,scales::comma(n, accuracy = 1) ) , NA) ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 2.1 # 2.8 , vjust = 2.3 ) + cowplot::theme_minimal_grid(9) + theme( legend.position = &quot;none&quot; , plot.background = element_rect(color = &quot;black&quot;, fill=&quot;white&quot;, linewidth = 2) , axis.text.x = element_blank() , axis.title.x = element_text(size=7) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;, size = 9) ) # combine cowplot::ggdraw( plt_fpas_sc_map[[2]] + theme( legend.position = c(.4,.98) , legend.direction = &quot;horizontal&quot; , legend.text = element_text(size = 9) , plot.background = element_rect(fill=&quot;white&quot;, color = NA) , plot.margin = margin(0, 5.1, -0.7, 0.1, &quot;cm&quot;) ) ) + cowplot::draw_plot(inset_temp, x=.5, y=.56, width=.45, height=.4) + cowplot::draw_plot_label( label = c(&quot;A&quot;, &quot;B&quot;), x = c(0.02, 0.5), y = c(1, 0.95), size = 17, fontface = &quot;bold&quot;, color = &quot;gray11&quot; ) # export ggplot2::ggsave( filename = paste0(&quot;../data/plt_prjareas_sc_map_inset.png&quot;) , plot = ggplot2::last_plot() , width = 11 , height = 8.5 , units = &quot;in&quot; , dpi = &quot;print&quot; ) 4.9 Landcover Class Area 4.9.1 Overall Landscape What is the landcover classification of the area within the landscape boundary? This GEE script was used to calculate the area by NLCD landcover class. # nlcd class groups nlcd_reclass_df_temp &lt;- data.frame( class_id = c(11,12,21,22,23,24,31,41,42,43,51,52,71,72,73,74,81,82,90,95) %&gt;% as.character() , class_label = c( &quot;Water&quot; , &quot;Water&quot; , &quot;Developed&quot; , &quot;Developed&quot; , &quot;Developed&quot; , &quot;Developed&quot; , &quot;Barren&quot; , &quot;Forest&quot; , &quot;Forest&quot; , &quot;Forest&quot; , &quot;Shrubland&quot; , &quot;Shrubland&quot; , &quot;Herbaceous&quot; , &quot;Herbaceous&quot; , &quot;Herbaceous&quot; , &quot;Herbaceous&quot; , &quot;Planted/Cultivated&quot; # double-check name , &quot;Planted/Cultivated&quot; , &quot;Wetlands&quot; , &quot;Wetlands&quot; ) ) %&gt;% dplyr::left_join( FedData::nlcd_colors() %&gt;% dplyr::rename(class_id=ID) %&gt;% dplyr::rename_with(tolower) %&gt;% dplyr::mutate_all(as.character) , by = dplyr::join_by(class_id) ) # load data by wf priority wf_nlcd_area &lt;- readr::read_csv(&quot;../data/wildfirepriority/wfpriority_nlcd_area.csv&quot;) %&gt;% dplyr::rename_with(tolower) %&gt;% dplyr::left_join( wf_landscapes %&gt;% dplyr::select(name,state,area_name) , by = dplyr::join_by(name,state) ) %&gt;% tidyr::pivot_longer( cols = tidyselect::starts_with(&quot;area_m2_nlcd_cl&quot;) , names_to = &quot;class_id&quot; , values_to = &quot;area_m2&quot; , names_prefix = &quot;area_m2_nlcd_cl_&quot; , values_drop_na = F ) %&gt;% dplyr::left_join( nlcd_reclass_df_temp , by = dplyr::join_by(class_id) ) %&gt;% dplyr::mutate( class_label = forcats::fct_relevel(class_label, c(&quot;Forest&quot;,&quot;Shrubland&quot;)) %&gt;% forcats::fct_rev() ) # get color palette nlcd_colors &lt;- wf_nlcd_area %&gt;% dplyr::group_by(class_id,color,class_label) %&gt;% dplyr::summarise(sum_area = sum(area_m2,na.rm = T)) %&gt;% dplyr::arrange(class_label,desc(sum_area)) %&gt;% dplyr::group_by(class_label) %&gt;% dplyr::filter(dplyr::row_number()==1) %&gt;% dplyr::ungroup() %&gt;% dplyr::pull(color) # aggregate and plot wf_nlcd_area %&gt;% dplyr::group_by(area_name,class_label) %&gt;% dplyr::summarise(sum_area_ha = sum(area_m2,na.rm = F)/10000) %&gt;% dplyr::mutate(sum_area_ha = ifelse(is.na(sum_area_ha),0,sum_area_ha)) %&gt;% dplyr::group_by(area_name) %&gt;% dplyr::mutate( pct_area = sum_area_ha/sum(sum_area_ha) # , area_name = area_name %&gt;% forcats::fct_rev() ) %&gt;% dplyr::ungroup() %&gt;% ggplot( mapping = aes(x = pct_area, y = reorder(area_name, desc(area_name)), fill=class_label) ) + geom_col(width = 0.7, alpha=0.8) + geom_text( mapping = aes( label = scales::percent(ifelse(pct_area&gt;.03,pct_area,NA), accuracy = 1) ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 3 ) + scale_fill_manual(values = nlcd_colors) + scale_x_continuous(labels = scales::percent_format()) + labs( fill = &quot;NLCD\\nCover\\nType&quot; , y = &quot;&quot; , x = &quot;Percent of Overall Landscape Area&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; # c(0.9, 0.9) , legend.title = element_text(size=9) , axis.text.x = element_text(size=7) , axis.title.x = element_text(size=10, face = &quot;bold&quot;) ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9)) ) ggplot2::ggsave( filename = paste0(&quot;../data/plt_nlcd_area_ls.png&quot;) , plot = ggplot2::last_plot() , width = 11 , height = 8.5 , units = &quot;in&quot; , dpi = &quot;print&quot; ) 4.9.2 Fireshed Project Areas What is the landcover classification of the fireshed project area units? This GEE script was used to calculate the area by NLCD landcover class. # load nlcd cover data by fireshed project area nlcd_area_ls_pa &lt;- readr::read_csv(&quot;../data/wildfirepriority/wfpriority_fireshed_nlcd_area.csv&quot;) %&gt;% dplyr::rename_with(tolower) %&gt;% dplyr::select( pa_id , tidyselect::contains(&quot;area_m2&quot;) ) %&gt;% dplyr::mutate(pa_id = as.character(pa_id)) %&gt;% dplyr::inner_join( constrained_by_scnro_ls_pa %&gt;% dplyr::filter(scenario_id==1) %&gt;% dplyr::select(pa_id,name,state,area_name,fireshed_crisis_strategy) , by = dplyr::join_by(pa_id) , multiple = &quot;all&quot; ) %&gt;% tidyr::pivot_longer( cols = tidyselect::starts_with(&quot;area_m2_nlcd_cl&quot;) , names_to = &quot;class_id&quot; , values_to = &quot;area_m2&quot; , names_prefix = &quot;area_m2_nlcd_cl_&quot; , values_drop_na = F ) %&gt;% dplyr::left_join( nlcd_reclass_df_temp , by = dplyr::join_by(class_id) ) %&gt;% dplyr::mutate( class_label = forcats::fct_relevel(class_label, c(&quot;Forest&quot;,&quot;Shrubland&quot;)) %&gt;% forcats::fct_rev() ) # aggregate and plot nlcd_area_ls_pa %&gt;% dplyr::group_by(area_name,class_label) %&gt;% dplyr::summarise(sum_area_ha = sum(area_m2,na.rm = F)/10000) %&gt;% dplyr::mutate(sum_area_ha = ifelse(is.na(sum_area_ha),0,sum_area_ha)) %&gt;% dplyr::group_by(area_name) %&gt;% dplyr::mutate(pct_area = sum_area_ha/sum(sum_area_ha)) %&gt;% dplyr::ungroup() %&gt;% ggplot( mapping = aes(x = pct_area, y = reorder(area_name, desc(area_name)), fill=class_label) ) + geom_col(width = 0.7, alpha=0.8) + geom_text( mapping = aes( label = scales::percent(ifelse(pct_area&gt;.03,pct_area,NA), accuracy = 1) ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 3 ) + scale_fill_manual(values = nlcd_colors) + scale_x_continuous(labels = scales::percent_format()) + labs( fill = &quot;NLCD\\nCover\\nType&quot; , y = &quot;&quot; , x = &quot;% Landscape Area&quot; , subtitle = &quot;All Fireshed Project Areas&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; # c(0.9, 0.9) , legend.title = element_text(size=9) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9)) ) The figure above shows the NLCD landcover class distribution for all fireshed project areas with at least 25% of area within the boundary of the Strategy priority landscape. 4.9.3 NLCD Cover Type high-risk firesheds # aggregate and plot nlcd_area_ls_pa %&gt;% dplyr::filter(fireshed_crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;)) %&gt;% dplyr::group_by(area_name,class_label) %&gt;% dplyr::summarise(sum_area_ha = sum(area_m2,na.rm = F)/10000) %&gt;% dplyr::mutate(sum_area_ha = ifelse(is.na(sum_area_ha),0,sum_area_ha)) %&gt;% dplyr::group_by(area_name) %&gt;% dplyr::mutate(pct_area = sum_area_ha/sum(sum_area_ha)) %&gt;% dplyr::ungroup() %&gt;% ggplot( mapping = aes(x = pct_area, y = reorder(area_name, desc(area_name)), fill=class_label) ) + geom_col(width = 0.7, alpha=0.8) + geom_text( mapping = aes( label = scales::percent(ifelse(pct_area&gt;.03,pct_area,NA), accuracy = 1) ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 3 ) + scale_fill_manual(values = nlcd_colors) + scale_x_continuous(labels = scales::percent_format()) + labs( fill = &quot;NLCD\\nCover\\nType&quot; , y = &quot;&quot; , x = &quot;% Landscape Area&quot; , subtitle = &quot;High-Risk Fireshed Project Areas&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; # c(0.9, 0.9) , legend.title = element_text(size=9) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9)) ) The figure above shows the NLCD landcover class distribution for only high-risk fireshed project areas with at least 25% of area within the boundary of the Strategy priority landscape. 4.9.4 NLCD Cover Type vs. Mechanically Available Is there a relationship between forest and shrubland cover and mechanical availability and is that relationship the same? nlcd_area_ls_pa_cl_temp &lt;- nlcd_area_ls_pa %&gt;% # dplyr::filter(fireshed_crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;)) %&gt;% dplyr::group_by(pa_id,area_name,class_label) %&gt;% dplyr::summarise(sum_area_ha = sum(area_m2,na.rm = F)/10000) %&gt;% dplyr::group_by(pa_id,area_name) %&gt;% dplyr::mutate(pct_area = sum_area_ha/sum(sum_area_ha)) %&gt;% dplyr::ungroup() %&gt;% dplyr::filter(class_label %in% c(&quot;Forest&quot;,&quot;Shrubland&quot;)) %&gt;% dplyr::inner_join( constrained_by_scnro_ls_pa %&gt;% dplyr::select( scenario_id , scenario_lab , scenario_desc , pa_id , area_name , pct_rmn5_administrative , pct_rdctn_total , cnstrnt_class , fireshed_crisis_strategy ) , by = dplyr::join_by(pa_id,area_name) , multiple = &quot;all&quot; ) # dplyr::mutate(scenario_desc = scenario_desc %&gt;% forcats::fct_rev()) # treatable vs covertype ggplot( data = nlcd_area_ls_pa_cl_temp , mapping = aes(y = pct_rmn5_administrative, x = pct_area, color = class_label) ) + geom_point(alpha = 0.7, size = 1) + # geom_smooth(method = &quot;lm&quot;, lwd = 1, color = &quot;gray&quot;, linetype = &quot;dashed&quot;, se=F) + scale_color_manual(values = nlcd_colors[(length(nlcd_colors)-1):length(nlcd_colors)]) + facet_grid(cols = vars(class_label), rows = vars(scenario_desc)) + scale_x_continuous(labels = scales::percent_format()) + scale_y_continuous(labels = scales::percent_format()) + labs( x = &quot;Percent Cover Type&quot; , y = &quot;Percent Treatable Area Remaining&quot; ) + theme_light() + theme( legend.position = &quot;none&quot; , axis.title = element_text(size=9) , axis.text = element_text(size=7) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) ) All fireshed project areas with at least 25% of area within the boundary of the Strategy priority landscape shown in figure above. 4.9.5 Distribution of Mechanically Available (Shrb vs. Frst) # n for notation nlab_temp &lt;- nlcd_area_ls_pa_cl_temp %&gt;% dplyr::filter(pct_area &gt; .5 &amp; scenario_id==1) %&gt;% dplyr::count(class_label) %&gt;% dplyr::mutate(l = paste0(class_label, &quot; n = &quot;, scales::comma(n))) %&gt;% dplyr::pull(l) %&gt;% paste(collapse = &quot; | &quot;) # plot nlcd_area_ls_pa_cl_temp %&gt;% dplyr::filter(pct_area &gt; .5) %&gt;% ggplot( mapping = aes(x = pct_rmn5_administrative, fill = class_label, group = class_label, color = class_label) ) + geom_density(alpha = 0.7) + scale_fill_manual(values = nlcd_colors[(length(nlcd_colors)-1):length(nlcd_colors)]) + scale_color_manual(values = nlcd_colors[(length(nlcd_colors)-1):length(nlcd_colors)]) + facet_grid(cols = vars(class_label), rows = vars(scenario_desc)) + scale_x_continuous(labels = scales::percent_format()) + # scale_y_continuous(labels = scales::percent_format()) + labs( y = &quot;Density&quot; , x = &quot;Percent Treatable Area Remaining&quot; , caption = nlab_temp ) + theme_light() + theme( legend.position = &quot;none&quot; , axis.title = element_text(size=9) , axis.text = element_text(size=7) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) , plot.caption = element_text(size = 8) ) In the plot above fireshed project areas are grouped into forest or shrubland based on the majority cover type (e.g. &gt;50% forest). Fireshed project areas where the majority covertype is not forest or shrubland are not shown. All fireshed project areas with at least 25% of area within the boundary of the Strategy priority landscape shown in figure above. 4.9.6 Distribution of Fireshed PA Constraint (Shrb vs. Frst) nlcd_area_ls_pa_cl_temp %&gt;% dplyr::filter(pct_area &gt; .5) %&gt;% dplyr::count(class_label, scenario_desc, scenario_lab, cnstrnt_class) %&gt;% dplyr::group_by(class_label, scenario_desc, scenario_lab) %&gt;% dplyr::mutate(pct = n/sum(n)) %&gt;% ggplot() + geom_col( mapping = aes(x = pct, y = scenario_lab, fill=cnstrnt_class) ,width = 0.7, alpha=0.8 ) + geom_text( mapping = aes(x = pct, y = scenario_lab, group=cnstrnt_class ,label = scales::percent(ifelse(pct&gt;=0.05,pct,NA), accuracy = 1) , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 2.3 ) + scale_fill_brewer(type = &quot;div&quot;, palette = &quot;RdYlBu&quot;, direction = -1) + facet_grid(cols = vars(class_label)) + scale_x_continuous(labels = scales::percent_format()) + labs( fill = &quot;Level of\\nConstraint&quot; , y = &quot;&quot; , x = &quot;% of Fireshed\\nProject Areas&quot; , caption = nlab_temp , subtitle = &quot;All Fireshed Project Areas&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) , plot.caption = element_text(size = 8) ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9)) ) In the plot above fireshed project areas are grouped into forest or shrubland based on the majority cover type (e.g. &gt;50% forest). Fireshed project areas where the majority covertype is not forest or shrubland are not shown. All fireshed project areas with at least 25% of area within the boundary of the Strategy priority landscape shown in figure above. 4.9.7 High-Risk Distribution of Fireshed PA Constraint (Shrb vs. Frst) # n for notation nlab_temp &lt;- nlcd_area_ls_pa_cl_temp %&gt;% dplyr::filter(pct_area &gt; .5 &amp; fireshed_crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;) &amp; scenario_id==1) %&gt;% dplyr::count(class_label) %&gt;% dplyr::mutate(l = paste0(class_label, &quot; n = &quot;, scales::comma(n))) %&gt;% dplyr::pull(l) %&gt;% paste(collapse = &quot; | &quot;) # plot nlcd_area_ls_pa_cl_temp %&gt;% dplyr::filter(pct_area &gt; .5 &amp; fireshed_crisis_strategy %in% c(&quot;USFS-Only&quot;, &quot;All-Lands&quot;)) %&gt;% dplyr::count(class_label, scenario_desc, scenario_lab, cnstrnt_class) %&gt;% dplyr::group_by(class_label, scenario_desc, scenario_lab) %&gt;% dplyr::mutate(pct = n/sum(n)) %&gt;% ggplot() + geom_col( mapping = aes(x = pct, y = scenario_lab, fill=cnstrnt_class) ,width = 0.7, alpha=0.8 ) + geom_text( mapping = aes(x = pct, y = scenario_lab, group=cnstrnt_class ,label = scales::percent(ifelse(pct&gt;=0.05,pct,NA), accuracy = 1) , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 2.3 ) + scale_fill_brewer(type = &quot;div&quot;, palette = &quot;RdYlBu&quot;, direction = -1) + facet_grid(cols = vars(class_label)) + scale_x_continuous(labels = scales::percent_format()) + labs( fill = &quot;Level of\\nConstraint&quot; , y = &quot;&quot; , x = &quot;% of Fireshed\\nProject Areas&quot; , caption = nlab_temp , subtitle = &quot;High-Risk Fireshed Project Areas&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) , plot.caption = element_text(size = 8) ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9)) ) In the plot above fireshed project areas are grouped into forest or shrubland based on the majority cover type (e.g. &gt;50% forest). Fireshed project areas where the majority covertype is not forest or shrubland are not shown. Only high-risk fireshed project areas with at least 25% of area within the boundary of the Strategy priority landscape shown in figure above. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
